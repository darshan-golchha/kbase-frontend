[{"/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/index.js":"1","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/App.js":"2","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/context/AuthProvider.js":"3","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/components/Details.js":"4","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/components/Result.js":"5","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/components/Edit.js":"6","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/components/Data.js":"7","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/components/View.js":"8","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/components/Advance.js":"9","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/components/Appbar.js":"10","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/components/Login.js":"11","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/admin/admin.js":"12","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/admin/Signup.js":"13","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/hooks/useAuth.js":"14","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/admin/UserTable.js":"15","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/services/CSVRenderer.js":"16","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/hooks/useAxiosPrivate.js":"17","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/hooks/useRefreshToken.js":"18","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/api/axios.js":"19"},{"size":399,"mtime":1690467914000,"results":"20","hashOfConfig":"21"},{"size":1803,"mtime":1707853882457,"results":"22","hashOfConfig":"21"},{"size":560,"mtime":1690268920000,"results":"23","hashOfConfig":"21"},{"size":5305,"mtime":1707853877046,"results":"24","hashOfConfig":"21"},{"size":13698,"mtime":1690884918000,"results":"25","hashOfConfig":"21"},{"size":12650,"mtime":1690884452000,"results":"26","hashOfConfig":"21"},{"size":7247,"mtime":1690539694000,"results":"27","hashOfConfig":"21"},{"size":12342,"mtime":1719040657445,"results":"28","hashOfConfig":"21"},{"size":8112,"mtime":1690786984000,"results":"29","hashOfConfig":"21"},{"size":3817,"mtime":1719040312114,"results":"30","hashOfConfig":"21"},{"size":5705,"mtime":1719040341934,"results":"31","hashOfConfig":"21"},{"size":933,"mtime":1690873678000,"results":"32","hashOfConfig":"21"},{"size":4220,"mtime":1690868822000,"results":"33","hashOfConfig":"21"},{"size":317,"mtime":1690123738000,"results":"34","hashOfConfig":"21"},{"size":7250,"mtime":1690884566000,"results":"35","hashOfConfig":"21"},{"size":1675,"mtime":1690783586000,"results":"36","hashOfConfig":"21"},{"size":1540,"mtime":1690287492000,"results":"37","hashOfConfig":"21"},{"size":788,"mtime":1690283726000,"results":"38","hashOfConfig":"21"},{"size":454,"mtime":1690533578000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xr97gk",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/index.js",[],[],"/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/App.js",["103"],[],"import './App.css';\nimport Appbar from './components/Appbar';\nimport Data from './components/Data';\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Result from './components/Result.js';\nimport Details from './components/Details.js';\nimport View from './components/View.js';\nimport Edit from './components/Edit.js';\nimport Login from './components/Login';\nimport { AuthProvider } from './context/AuthProvider';\nimport AdvancedSearch from './components/Advance';\nimport AdminPage from './admin/admin';\nimport Signup from './admin/Signup';\n\nclass App extends Component {\n  render() {\n    const myStyle = {\n      backgroundImage:\n        \"url('https://getwallpapers.com/wallpaper/full/2/0/f/119773.jpg')\",\n      backgroundSize: 'cover',\n      minHeight: \"100vh\",\n      backgroundRepeat: 'repeat',\n    }\n    return (\n      <Router>\n        <div>\n          <Routes>\n            <Route exact path='/' element={\n              <div className=\"App\" style={myStyle}>\n                  <Appbar />\n                  <Data style={{ margin: '3em' }} />\n              </div>\n            } />\n            <Route exact path='/login' element={\n              <Login />} />\n            <Route exact path='/result' element={\n              <Result />\n            } />\n            <Route exact path='/details/:id' element={<Details />} />\n            <Route exact path='/view/:id' element={<View />} />\n            <Route exact path='update/:id' element={<Edit />} />\n            <Route exact path='/adv' element={<AdvancedSearch />} />\n            <Route exact path='/admin' element={<AdminPage />} />\n            <Route exact path='/signup' element={<Signup />} />\n          </Routes>\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/context/AuthProvider.js",[],[],"/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/components/Details.js",[],[],"/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/components/Result.js",["104","105","106","107","108","109"],[],"import '../App.css';\r\nimport Appbar from '../components/Appbar';\r\nimport Paper from '@mui/material/Paper';\r\nimport React, { useState, useEffect } from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport NavigationIcon from '@mui/icons-material/Navigation';\r\nimport '../index.css';\r\nimport useAxiosPrivate from '../hooks/useAxiosPrivate';\r\nimport { useNavigate} from \"react-router\";\r\n\r\nconst Result = () => {\r\n  const axiosPrivate = useAxiosPrivate();\r\n  const navigate = useNavigate();\r\n\r\n  const [deps, setDeps] = useState([]);\r\n  useEffect(() => {\r\n      const getData = async () => {\r\n        try {\r\n          const response = await axiosPrivate.get('http://localhost:8080/search/deps');\r\n          const departmentsData = response.data.map(departmentName => ({\r\n            value: departmentName,\r\n            label: departmentName\r\n          }));\r\n          setDeps(departmentsData);\r\n        } catch (error) {\r\n          console.log(error.response);\r\n          if (error.response && (error.response.status === 403)) {\r\n              window.alert('Unauthorized! You don\\'t have permissions');\r\n              navigate(\"/\", { replace: true });\r\n          } else if (error.response && error.response.status === 401) {\r\n              window.alert('Your session is expired Or you are not authorized to access this.');\r\n              navigate(\"/login\", { replace: true });\r\n          } else {\r\n              console.error('Error fetching departments : ', error);\r\n          }\r\n      }\r\n      }\r\n\r\n      getData();\r\n  }, []);\r\n\r\n  const [funcs, setFuncs] = useState([]);\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const response = await axiosPrivate.get('http://localhost:8080/search/func');\r\n        const departmentsData = response.data.map(departmentName => ({\r\n          value: departmentName,\r\n          label: departmentName\r\n        }));\r\n        setFuncs(departmentsData);\r\n      } catch (error) {\r\n        console.log(error.response);\r\n        if (error.response && (error.response.status === 403)) {\r\n            window.alert('Unauthorized! You don\\'t have permissions');\r\n            navigate(\"/\", { replace: true });\r\n        } else if (error.response && error.response.status === 401) {\r\n            window.alert('Your session is expired Or you are not authorized to access this.');\r\n            navigate(\"/login\", { replace: true });\r\n        } else {\r\n            console.error('Error fetching functions : ', error);\r\n        }\r\n    }\r\n    }\r\n\r\n    getData();\r\n  }, []);\r\n\r\n  const [apps, setApps] = useState([]);\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const response = await axiosPrivate.get('http://localhost:8080/search/apps');\r\n        const departmentsData = response.data.map(departmentName => ({\r\n          value: departmentName,\r\n          label: departmentName\r\n        }));\r\n        setApps(departmentsData);\r\n      } catch (error) {\r\n        console.log(error.response);\r\n        if (error.response && (error.response.status === 403)) {\r\n            window.alert('Unauthorized! You don\\'t have permissions');\r\n            navigate(\"/\", { replace: true });\r\n        } else if (error.response && error.response.status === 401) {\r\n            window.alert('Your session is expired Or you are not authorized to access this.');\r\n            navigate(\"/login\", { replace: true });\r\n        } else {\r\n            console.error('Error fetching applications : ', error);\r\n        }\r\n    }\r\n    }\r\n\r\n    getData();\r\n  }, []);\r\n\r\n  const myStyle = {\r\n            backgroundImage: \r\n     \"url('https://getwallpapers.com/wallpaper/full/2/0/f/119773.jpg')\",\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'repeat',\r\n  }\r\n\r\n  const [menus, setMenus] = useState([]);\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const response = await axiosPrivate.get('http://localhost:8080/search/menu');\r\n        const departmentsData = response.data.map(departmentName => ({\r\n          value: departmentName,\r\n          label: departmentName\r\n        }));\r\n        setMenus(departmentsData);\r\n      } catch (error) {\r\n        console.log(error.response);\r\n        if (error.response && (error.response.status === 403)) {\r\n            window.alert('Unauthorized! You don\\'t have permissions');\r\n            navigate(\"/\", { replace: true });\r\n        } else if (error.response && error.response.status === 401) {\r\n            window.alert('Your session is expired Or you are not authorized to access this.');\r\n            navigate(\"/login\", { replace: true });\r\n        } else {\r\n            console.error('Error fetching menu : ', error);\r\n        }\r\n    }\r\n    }\r\n\r\n    getData();\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const [department, setDepartment] = useState('');\r\n  const [func, setFunc] = useState('');\r\n  const [application, setApplication] = useState('');\r\n  const [menu, setMenu] = useState('');\r\n  const [desc, setDesc] = useState('');\r\n  const [auth, setAuth] = useState('');\r\n  const [files, setFile] = useState([]);\r\n\r\n  const handleFileChange = (event) => {\r\n    const selectedFiles = event.target.files;\r\n    const filesArray = Array.from(selectedFiles);\r\n    setFile(filesArray);\r\n  };\r\n\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n\r\n  // State variable to track form validation status\r\n  const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n  // Function to check form validity\r\n  const checkFormValidity = () => {\r\n    const isDepartmentValid = department.trim() !== '';\r\n    const isFuncValid = func.trim() !== '';\r\n    const isApplicationValid = application.trim() !== '';\r\n    const isMenuValid = menu.trim() !== '';\r\n    const isAuthValid = auth.trim() !== '';\r\n    const isDescValid = desc.trim() !== '';\r\n\r\n    // Check if all fields are filled\r\n    setIsFormValid(\r\n      isDepartmentValid &&\r\n      isFuncValid &&\r\n      isApplicationValid &&\r\n      isMenuValid &&\r\n      isAuthValid &&\r\n      isDescValid &&\r\n      files.length > 0\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check form validity whenever any input value changes\r\n    checkFormValidity();\r\n  }, [department, func, application, menu, auth, desc, files]);\r\n\r\n  const handleSubmit = async () => {\r\n    if (!isFormValid) {\r\n      alert('Please fill in all the required fields and upload at least one file before submitting.');\r\n      return;\r\n    }\r\n    const url = `http://localhost:8080/add?departmentName=${department}&functionName=${func}&applicationName=${application}&menuName=${menu}&description=${desc}&author=${auth}`;\r\n\r\n    const formData = new FormData();\r\n    for (let i = 0; i < files.length; i++) {\r\n      formData.append('file', files[i]);\r\n    }\r\n\r\n    try {\r\n      const response = await axiosPrivate.post(url, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      if (response?.data) {\r\n        console.log(response);\r\n        navigate(\"/\", { replace: true });\r\n      } else {\r\n        console.log(\"incorrect submission\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response);\r\n      if (error.response && (error.response.status === 403)) {\r\n          window.alert('Unauthorized! You don\\'t have permissions');\r\n          navigate(\"/\", { replace: true });\r\n      } else if (error.response && error.response.status === 401) {\r\n          window.alert('Your session is expired Or you are not authorized to access this.');\r\n          navigate(\"/login\", { replace: true });\r\n      } else {\r\n          console.error('Error uploading data : ', error);\r\n      }\r\n  }\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div style={myStyle}>\r\n      <div> <Appbar className=\"App\" /> </div>\r\n      <div style={myStyle} minHeight=\"3cm\"></div>\r\n      <Paper elevation={3} style={{ padding: '2em', margin: '2em' }}>\r\n        <div style={{ display: 'grid', gridTemplateColumns: '1fr 0.3fr 0.8fr' }}>\r\n          <FormControl style={{ width: '30vw' }}>\r\n            <InputLabel id=\"demo-multiple-name-label\">Dept</InputLabel>\r\n            <Select\r\n              labelId=\"demo-multiple-name-label\"\r\n              id=\"demo-multiple-name\"\r\n              select\r\n              onChange={e => setDepartment(e.target.value)}\r\n              input={<OutlinedInput label=\"Name\" />}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {deps.map((name) => (\r\n                <MenuItem\r\n                  key={name.value}\r\n                  value={name.value}\r\n                >\r\n                  {name.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <h4>Or Department : </h4>\r\n          <input type=\"text\" style={{ fontSize: '1.4em', padding: '0.7em' }} value={department} onChange={e => setDepartment(e.target.value)} />\r\n        </div>\r\n        <div style={{ display: 'grid', gridTemplateColumns: '1fr 0.3fr 0.8fr' }}>\r\n          <FormControl style={{ width: '30vw' }}>\r\n            <InputLabel id=\"func-id\">Func</InputLabel>\r\n            <Select\r\n              labelId=\"func-id\"\r\n              id=\"func-id\"\r\n              select\r\n              onChange={e => setFunc(e.target.value)}\r\n              input={<OutlinedInput label=\"Name\" />}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {funcs.map((name) => (\r\n                <MenuItem\r\n                  key={name.value}\r\n                  value={name.value}\r\n                >\r\n                  {name.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <h4>Or Function : </h4>\r\n          <input type=\"text\" style={{ fontSize: '1.4em', padding: '0.7em' }} value={func} onChange={e => setFunc(e.target.value)} />\r\n        </div>\r\n        <div style={{ display: 'grid', gridTemplateColumns: '1fr 0.3fr 0.8fr' }}>\r\n          <FormControl style={{ width: '30vw' }}>\r\n            <InputLabel id=\"demo-multiple-name-label\">App</InputLabel>\r\n            <Select\r\n              labelId=\"demo-multiple-name-label\"\r\n              id=\"demo-multiple-name\"\r\n              select\r\n              onChange={e => setApplication(e.target.value)}\r\n              input={<OutlinedInput label=\"Name\" />}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {apps.map((name) => (\r\n                <MenuItem\r\n                  key={name.value}\r\n                  value={name.value}\r\n                >\r\n                  {name.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <h4>Or Application : </h4>\r\n          <input type=\"text\" style={{ fontSize: '1.4em', padding: '0.7em' }} value={application} onChange={e => setApplication(e.target.value)} />\r\n        </div>\r\n        <div style={{ display: 'grid', gridTemplateColumns: '1fr 0.3fr 0.8fr' }}>\r\n          <FormControl style={{ width: '30vw' }}>\r\n            <InputLabel id=\"demo-multiple-name-label\">Menu</InputLabel>\r\n            <Select\r\n              labelId=\"demo-multiple-name-label\"\r\n              id=\"demo-multiple-name\"\r\n              select\r\n              onChange={e => setMenu(e.target.value)}\r\n              input={<OutlinedInput label=\"Name\" />}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {menus.map((name) => (\r\n                <MenuItem\r\n                  key={name.value}\r\n                  value={name.value}\r\n                >\r\n                  {name.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <h4>Or Menu : </h4>\r\n          <input type=\"text\" style={{ fontSize: '1.4em', padding: '0.7em' }} value={menu} onChange={e => setMenu(e.target.value)} />\r\n        </div>\r\n      </Paper>\r\n      <Paper elevation={3} style={{ padding: '2em', margin: '2em' }}>\r\n        <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr 1fr' }}>\r\n          <div>\r\n            <h4>Author : </h4>\r\n            <input type=\"text\" style={{ fontSize: '1em', padding: '0.3em' }} value={auth} onChange={e => setAuth(e.target.value)} />\r\n          </div>\r\n          <div>\r\n            <h4>Description : </h4>\r\n            <input type=\"text\" style={{ fontSize: '1em', padding: '0.3em' }} value={desc} onChange={e => setDesc(e.target.value)} />\r\n          </div>\r\n          <div>\r\n            <h4>File:</h4>\r\n            <Fab variant=\"extended\" size=\"small\" color=\"primary\" aria-label=\"add\">\r\n              <NavigationIcon sx={{ mr: 1 }} />\r\n              <span>Upload</span>\r\n              <input type=\"file\" style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%', opacity: 0, cursor: 'pointer' }} onChange={handleFileChange} multiple />\r\n            </Fab>\r\n            {files.length > 0 && (\r\n              <ul>\r\n                {files.map((fileName, index) => (\r\n                  <li key={index}>{fileName.name}</li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n          <Button variant=\"contained\" onClick={handleSubmit} type=\"submit\" style={{ width : 'fit-content', height : 'fit-content', margin : 'auto'}}>Submit</Button>\r\n        </div>\r\n      </Paper>\r\n      <div style={{ height: \"90px\" }} />\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default Result;\r\n\r\n","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/components/Edit.js",["110","111"],[],"import React, { useState, useEffect } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport { useParams } from 'react-router-dom';\r\nimport Appbar from '../components/Appbar';\r\nimport Button from '@mui/material/Button';\r\nimport useAxiosPrivate from '../hooks/useAxiosPrivate';\r\nimport { useNavigate } from \"react-router\";\r\nimport FormControl from '@mui/material/FormControl';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Fab from '@mui/material/Fab';\r\nimport NavigationIcon from '@mui/icons-material/Navigation';\r\n\r\n\r\nconst EditPage = () => {\r\n\r\n    const axiosPrivate = useAxiosPrivate();\r\n    const navigate = useNavigate();\r\n\r\n    const { id } = useParams();\r\n    const [departmentName, setDepartmentName] = useState('');\r\n    const [functionName, setFunctionName] = useState('');\r\n    const [applicationName, setApplicationName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    const [filesToAdd, setFilesToAdd] = useState([]);\r\n    const [filesToDelete, setFilesToDelete] = useState([]);\r\n    const [menuFiles, setMenuFiles] = useState([]);\r\n    const menuId = id;\r\n    const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchMenuFiles();\r\n    }, [menuId]);\r\n\r\n    const myStyle = {\r\n        backgroundImage:\r\n            \"url('https://getwallpapers.com/wallpaper/full/2/0/f/119773.jpg')\",\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'repeat',\r\n        minHeight: '100vh'\r\n    }\r\n\r\n    const handleFileChange = (event) => {\r\n        const fileList = event.target.files;\r\n        const newSelectedFiles = [];\r\n        for (let i = 0; i < fileList.length; i++) {\r\n            newSelectedFiles.push({ file: fileList[i], id: i });\r\n        }\r\n        setSelectedFiles(newSelectedFiles);\r\n        setFilesToAdd([...filesToAdd, ...fileList]);\r\n    };\r\n\r\n    const handleRemoveSelectedFile = (id) => {\r\n        setSelectedFiles((prevSelectedFiles) =>\r\n            prevSelectedFiles.filter((file) => file.id !== id)\r\n        );\r\n        setFilesToAdd((prevFiles) => prevFiles.filter((file, index) => index !== id));\r\n    };\r\n\r\n\r\n    const handleDeleteFile = (fileId) => {\r\n        setFilesToDelete((prevFiles) => [...prevFiles, fileId]);\r\n    };\r\n\r\n    const fetchMenuFiles = async () => {\r\n        try {\r\n            const response = await axiosPrivate.get(`http://localhost:8080/search/menu/${menuId}`);\r\n            if (response.data) {\r\n                const data = await response.data;\r\n                setMenuFiles(data);\r\n            } else {\r\n                throw new Error('Error fetching menu files');\r\n            }\r\n        } catch (error) {\r\n            console.log(error.response);\r\n            if (error.response && (error.response.status === 403)) {\r\n                window.alert('Unauthorized! You are not allowed view these files.');\r\n                navigate(\"/\", { replace: true });\r\n            } else if (error.response && error.response.status === 401) {\r\n                window.alert('Your session is expired Or you are not authorized to access this.');\r\n                navigate(\"/login\", { replace: true });\r\n            } else {\r\n                console.error('Error occurred while fetching data:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n\r\n        if (menuFiles.length === filesToDelete.length) {\r\n            alert(\"At least one file must be present in the record.\");\r\n            return;\r\n        }\r\n\r\n        event.preventDefault();\r\n\r\n        if (filesToAdd.length > 0 && author.trim() === '') {\r\n            alert(\"Please provide the author name before uploading files.\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('departmentName', departmentName);\r\n        formData.append('functionName', functionName);\r\n        formData.append('applicationName', applicationName);\r\n        formData.append('description', description);\r\n        formData.append('author', author)\r\n\r\n        // Append files to add\r\n        for (let i = 0; i < filesToAdd.length; i++) {\r\n            formData.append('filesToAdd', filesToAdd[i]);\r\n        }\r\n\r\n        // Append file IDs to delete\r\n        for (let i = 0; i < filesToDelete.length; i++) {\r\n            formData.append('fileIdsToDelete', filesToDelete[i]);\r\n        }\r\n\r\n        try {\r\n\r\n            const response = await axiosPrivate.post(`http://localhost:8080/update/${menuId}`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n\r\n            if (response?.data) {\r\n                console.log(response);\r\n                navigate(\"/\", { replace: true });\r\n            } else {\r\n                console.log(\"incorrect submission\");\r\n            }\r\n        } catch (error) {\r\n            console.log(error.response);\r\n            if (error.response && (error.response.status === 403)) {\r\n                window.alert('Unauthorized! You are not allowed to edit this record.');\r\n                navigate(\"/\", { replace: true });\r\n            } else if (error.response && error.response.status === 401) {\r\n                window.alert('Your session is expired Or you are not authorized to access this.');\r\n                navigate(\"/login\", { replace: true });\r\n            } else {\r\n                console.error('Error occurred while fetching data:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const intDivs = {\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr',\r\n        padding: '0.5em',\r\n        gap: '1em',\r\n        backgroundColor: 'white',\r\n        borderRadius: '0.5em',\r\n        width: '30vw',\r\n        margin: '0.5mm'\r\n    };\r\n\r\n    const intFils = {\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr',\r\n        backgroundColor: 'white',\r\n        borderRadius: '0.5em',\r\n        width: '30vw',\r\n        padding: '0.5em',\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={myStyle}>\r\n            <div style={{ backgroundColor: \"#eb8934\", height: '3 cm' }}></div>\r\n            <div> <Appbar className=\"App\" /> </div>\r\n            <div style={{\r\n                display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', padding: '1em',\r\n                margin: 'auto', gap: '1em',\r\n                width: 'fit-content'\r\n            }}>\r\n                <div style={{ width: '40%' }}>\r\n                    <form style={intDivs}>\r\n                        <FormControl variant=\"outlined\" style={{ marginBottom: '1em' }}>\r\n                            <InputLabel htmlFor=\"department-name\">Department Name</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"department-name\"\r\n                                type=\"text\"\r\n                                value={departmentName}\r\n                                onChange={(event) => setDepartmentName(event.target.value)}\r\n                                label=\"Department Name\"\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl variant=\"outlined\" style={{ marginBottom: '1em' }}>\r\n                            <InputLabel htmlFor=\"function-name\">Function Name</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"function-name\"\r\n                                type=\"text\"\r\n                                value={functionName}\r\n                                onChange={(event) => setFunctionName(event.target.value)}\r\n                                label=\"Function Name\"\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl variant=\"outlined\" style={{ marginBottom: '1em' }}>\r\n                            <InputLabel htmlFor=\"application-name\">Application Name</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"application-name\"\r\n                                type=\"text\"\r\n                                value={applicationName}\r\n                                onChange={(event) => setApplicationName(event.target.value)}\r\n                                label=\"Application Name\"\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl variant=\"outlined\" style={{ marginBottom: '1em' }}>\r\n                            <InputLabel htmlFor=\"description\">Description</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                value={description}\r\n                                onChange={(event) => setDescription(event.target.value)}\r\n                                label=\"Description\"\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl variant=\"outlined\">\r\n                            <InputLabel htmlFor=\"author\">Author</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"author\"\r\n                                type=\"text\"\r\n                                value={author}\r\n                                onChange={(event) => setAuthor(event.target.value)}\r\n                                label=\"Author\"\r\n                            />\r\n                        </FormControl>\r\n                    </form>\r\n                </div>\r\n                <div style={{ display: 'grid', gridTempleteColumns: '1fr', gap: '0.1em', justifyItems: 'center' }}>\r\n                    <div style={{\r\n                        backgroundColor: 'white',\r\n                        borderRadius: '0.5em', width: 'fit-content', height: 'fit-content',\r\n\r\n                    }}>\r\n                        <div style={intDivs}>\r\n                            <InputLabel>Files to Delete:</InputLabel>\r\n                            {menuFiles.map((file) => (\r\n                                <div key={file.fileId}>\r\n                                    <Checkbox\r\n                                        value={file.fileId}\r\n                                        onChange={(event) => handleDeleteFile(Number(event.target.value))}\r\n                                    />\r\n                                    <span>{file.fileName}</span>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: 'grid', gridTempleteColumns: '1fr', gap: '0.1em', justifyItems: 'center' }}>\r\n                    <Fab\r\n                        variant=\"extended\"\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        aria-label=\"add\"\r\n                    >\r\n                        <NavigationIcon sx={{ mr: 1 }} />\r\n                        <span>Add Files</span>\r\n                        <input\r\n                            type=\"file\"\r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                left: 0,\r\n                                width: '100%',\r\n                                height: '100%',\r\n                                opacity: 0,\r\n                                cursor: 'pointer',\r\n                            }}\r\n                            onChange={handleFileChange}\r\n                            multiple\r\n                        />\r\n                    </Fab>\r\n                    <div style={intFils}>\r\n                        <InputLabel>Files to Add:</InputLabel>\r\n                        {selectedFiles.map((selectedFile) => (\r\n                            <div key={selectedFile.id}>\r\n                                <Checkbox\r\n                                    checked\r\n                                    value={selectedFile.id}\r\n                                    onChange={() => handleRemoveSelectedFile(selectedFile.id)}\r\n                                />\r\n                                <span>{selectedFile.file.name}</span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <Button variant=\"contained\" type='submit' onClick={handleSubmit} style={{ height: 'fit-content', width: 'fit-content', margin: 'auto' }}>\r\n                        Update\r\n                    </Button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPage;\r\n","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/components/Data.js",["112"],[],"import React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { Container, Paper } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport { Link } from 'react-router-dom';\r\nimport '../index.css';\r\nimport useAxiosPrivate from '../hooks/useAxiosPrivate';\r\nimport { Typography } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\nconst criterias = [\r\n  {\r\n    value: 'description',\r\n    label: 'Description',\r\n  },\r\n  {\r\n    value: 'author',\r\n    label: 'Author',\r\n  },\r\n];\r\n\r\nexport default function Data() {\r\n  const axiosPrivate = useAxiosPrivate();\r\n  var description = \"\"\r\n  var author = \"\"\r\n  const [Search, setSearch] = React.useState('')\r\n  const [Keyword, setKeyword] = React.useState('')\r\n  const [searchResults, setSearchResults] = React.useState([])\r\n  const handleClick = (e) => {\r\n    if (Search) {\r\n      if (Keyword === \"description\") {\r\n        description = Search;\r\n        author = '';\r\n      } else {\r\n        author = Search;\r\n        description = '';\r\n      }\r\n\r\n      const url = `http://localhost:8080/search?author=${author}&description=${description}&uniqueMenuId=true`;\r\n      const getData = async () => {\r\n        try {\r\n          const response = await axiosPrivate.get(url);\r\n          setSearchResults(response.data);\r\n        } catch (error) {\r\n          console.error('Error fetching search results:', error);\r\n        }\r\n      }\r\n\r\n      getData();\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  const rowSt = {\r\n    display: 'grid', gridTemplateColumns: '1fr 1fr',\r\n    alignItems: 'center', padding: '2px', borderBottom: '1px solid black',\r\n  };\r\n\r\n  const headSt = {\r\n    fontSize: '1em',\r\n    fontWeight: 'bold'\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div style={{ height: \"90px\" }} />\r\n      <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap : '2em'}}>\r\n        <Paper\r\n          elevation={3}\r\n          style={{\r\n            display: 'grid',\r\n            gridTemplateColumns: '1fr',\r\n            padding: '1em',\r\n            gap: '1em',\r\n            borderRadius: '10px', // Add a border radius for a modern look\r\n            backgroundColor: '#ffffffdd', // Add a semi-transparent white background\r\n            boxShadow: '0 8px 16px rgba(0, 0, 0, 0.1)',\r\n            height : 'fit-content',\r\n            width : '85%'\r\n          }}\r\n        >\r\n          <form\r\n            component=\"form\"\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            style={{ display: 'flex', alignItems: 'center' }}\r\n            onSubmit={handleClick} // Handle form submit to trigger search when \"Enter\" is pressed\r\n          >\r\n            <TextField\r\n              id=\"filled-select-currency\"\r\n              select\r\n              label=\"Search Category\"\r\n              defaultValue=\"Keywords\"\r\n              variant=\"filled\"\r\n              value={Keyword}\r\n              onChange={(e) => setKeyword(e.target.value)}\r\n              style={{ minWidth: '25%', marginRight: '1em' }}\r\n            >\r\n              {criterias.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n              required\r\n              id=\"filled-required\"\r\n              label=\"Search Keywords\"\r\n              variant=\"filled\"\r\n              value={Search}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n              onKeyDown={(e) => {\r\n                if (e.key === 'Enter') {\r\n                  e.preventDefault();\r\n                  handleClick();\r\n                }\r\n              }}\r\n              style={{ width: 'auto', marginRight: '1em', flexGrow: 1 }} // Allow the text field to grow to fill the available space\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <IconButton onClick={handleClick} disabled={!Search} edge=\"end\">\r\n                    <SearchIcon />\r\n                  </IconButton>\r\n                ),\r\n              }}\r\n            />\r\n          </form>\r\n          <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\" component={Link} to=\"/adv\">\r\n            Advanced Search\r\n          </Typography>\r\n        </Paper>\r\n\r\n        <div>\r\n          {searchResults && searchResults.map((result) => (\r\n            <div\r\n              key={result.id}\r\n              className=\"box-container\"\r\n              style={{\r\n                // Add styling for each result box\r\n                backgroundColor: '#ffffff',\r\n                borderRadius: '10px',\r\n                padding: '1em',\r\n                marginBottom: '2em',\r\n                boxShadow: '0 8px 16px -8px rgba(0, 0, 0, 0.3)',\r\n                width : 'auto',\r\n                height : 'fit-content'\r\n              }}\r\n            >\r\n              {/* Render the content of each Data object */}\r\n              <TableContainer sx={{ maxWidth: '30vw', margin: 'auto', marginBottom: '2em' }}>\r\n                <Link to={`/details/${result.menu.menuId}`}>\r\n                  <div>\r\n                    <div style={rowSt}>\r\n                      <div style={headSt}>\r\n                        Author :\r\n                      </div>\r\n                      <div>\r\n                        {result.author}\r\n                      </div>\r\n                    </div>\r\n                    <div style={rowSt}>\r\n                      <div style={headSt}>\r\n                        Department :\r\n                      </div>\r\n                      <div>\r\n                        {result.menu.application.function.department.departmentName}\r\n                      </div>\r\n                    </div>\r\n                    <div style={rowSt}>\r\n                      <div style={headSt}>\r\n                        Function :\r\n                      </div>\r\n                      <div>\r\n                        {result.menu.application.function.functionName}\r\n                      </div>\r\n                    </div>\r\n                    <div style={rowSt}>\r\n                      <div style={headSt}>\r\n                        Application :\r\n                      </div>\r\n                      <div>\r\n                        {result.menu.application.applicationName}\r\n                      </div>\r\n                    </div>\r\n                    <div style={rowSt}>\r\n                      <div style={headSt}>\r\n                        Menu :\r\n                      </div>\r\n                      <div>\r\n                        {result.menu.menuName}\r\n                      </div>\r\n                    </div>\r\n                    <div style={rowSt}>\r\n                      <div style={headSt}>\r\n                        Description :\r\n                      </div>\r\n                      <div>\r\n                        {result.menu.description}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </TableContainer>\r\n\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div style={{ height: \"30px\" }} />\r\n    </Container>\r\n  );\r\n}\r\n\r\n","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/components/View.js",["113","114","115"],[],"/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/components/Advance.js",["116"],[],"import React, { useState } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport { styled } from '@mui/system';\r\nimport Button from '@mui/material/Button';\r\nimport useAxiosPrivate from '../hooks/useAxiosPrivate';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport { Link } from 'react-router-dom';\r\nimport Appbar from './Appbar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst SearchContainer = styled('div')({\r\n  padding: '1em',\r\n  margin: '1em auto',\r\n  maxWidth: '800px',\r\n});\r\n\r\nconst AdvancedSearch = () => {\r\n  const axiosPrivate = useAxiosPrivate();\r\n  const [searchCriteria, setSearchCriteria] = useState({\r\n    departmentName: '',\r\n    functionName: '',\r\n    applicationName: '',\r\n    menuName: '',\r\n    fileName: '',\r\n    author: '',\r\n    description: '',\r\n    uniqueMenuId: false,\r\n  });\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setSearchCriteria({ ...searchCriteria, [name]: value });\r\n  };\r\n\r\n  const handleCheckboxChange = (event) => {\r\n    setSearchCriteria({ ...searchCriteria, uniqueMenuId: event.target.checked });\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const response = await axiosPrivate.get('/search', { params: searchCriteria });\r\n\r\n      if (response?.data) {\r\n        setSearchResults(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error performing search:', error);\r\n    }\r\n  };\r\n\r\n  const rowSt = {\r\n    display: 'grid', gridTemplateColumns: '1fr 1fr',\r\n    alignItems: 'center', padding: '2px', borderBottom: '1px solid black',\r\n  };\r\n\r\n  const headSt = {\r\n    fontSize: '1em',\r\n    fontWeight: 'bold'\r\n  };\r\n\r\n  const inStyle = {\r\n    display: 'grid',\r\n    gap: '2cm',\r\n    backgroundColor : 'white',\r\n    borderRadius :'2em',\r\n    height : '20vh'\r\n  }\r\n\r\n  const myStyle = {\r\n    backgroundImage: \r\n     \"url('https://getwallpapers.com/wallpaper/full/2/0/f/119773.jpg')\",\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'repeat',\r\n    minHeight : '100vh'\r\n  }\r\n\r\n  return (\r\n    <div style={myStyle}>\r\n      <Appbar />\r\n      <SearchContainer style={inStyle}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container spacing={2} style={{ height: \"2cm\" }}>\r\n            <Grid item xs={6} sm={3}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Department Name\"\r\n                variant=\"outlined\"\r\n                name=\"departmentName\"\r\n                value={searchCriteria.departmentName}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} sm={3}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Function Name\"\r\n                variant=\"outlined\"\r\n                name=\"functionName\"\r\n                value={searchCriteria.functionName}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} sm={3}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Application Name\"\r\n                variant=\"outlined\"\r\n                name=\"applicationName\"\r\n                value={searchCriteria.applicationName}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} sm={3}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Menu Name\"\r\n                variant=\"outlined\"\r\n                name=\"menuName\"\r\n                value={searchCriteria.menuName}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} sm={3}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Author\"\r\n                variant=\"outlined\"\r\n                name=\"author\"\r\n                value={searchCriteria.author}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} sm={3}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Description\"\r\n                variant=\"outlined\"\r\n                name=\"description\"\r\n                value={searchCriteria.description}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} sm={3}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={searchCriteria.uniqueMenuId}\r\n                    onChange={handleCheckboxChange}\r\n                    name=\"uniqueMenuId\"\r\n                  />\r\n                }\r\n                label=\"Unique Menu ID\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} sm={3}>\r\n              <Button variant=\"contained\" type=\"submit\" fullWidth >\r\n                Search\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </SearchContainer>\r\n      <div style={{display : 'grid', gridTemplateColumns : '1fr 1fr 1fr',\r\n      justifyItems : 'center', marginTop : '3cm', \r\n      margin : '1em', gap :'1em'}}>\r\n          {searchResults && searchResults.map((result) => (\r\n            <div\r\n              key={result.id}\r\n              className=\"box-container\"\r\n              style={{\r\n                // Add styling for each result box\r\n                backgroundColor: '#ffffff',\r\n                borderRadius: '10px',\r\n                padding: '1em',\r\n                marginBottom: '2em',\r\n                boxShadow: '0 8px 16px -8px rgba(0, 0, 0, 0.3)',\r\n                width : '70%'\r\n              }}\r\n            >\r\n              {/* Render the content of each Data object */}\r\n              <TableContainer sx={{ maxWidth: '30vw', margin: 'auto', marginBottom: '2em' }}>\r\n                <Link to={`/details/${result.menu.menuId}`}>\r\n                  <div>\r\n                    <div style={rowSt}>\r\n                      <div style={headSt}>\r\n                        Author :\r\n                      </div>\r\n                      <div>\r\n                        {result.author}\r\n                      </div>\r\n                    </div>\r\n                    <div style={rowSt}>\r\n                      <div style={headSt}>\r\n                        Department :\r\n                      </div>\r\n                      <div>\r\n                        {result.menu.application.function.department.departmentName}\r\n                      </div>\r\n                    </div>\r\n                    <div style={rowSt}>\r\n                      <div style={headSt}>\r\n                        Function :\r\n                      </div>\r\n                      <div>\r\n                        {result.menu.application.function.functionName}\r\n                      </div>\r\n                    </div>\r\n                    <div style={rowSt}>\r\n                      <div style={headSt}>\r\n                        Application :\r\n                      </div>\r\n                      <div>\r\n                        {result.menu.application.applicationName}\r\n                      </div>\r\n                    </div>\r\n                    <div style={rowSt}>\r\n                      <div style={headSt}>\r\n                        Menu :\r\n                      </div>\r\n                      <div>\r\n                        {result.menu.menuName}\r\n                      </div>\r\n                    </div>\r\n                    <div style={rowSt}>\r\n                      <div style={headSt}>\r\n                        Description :\r\n                      </div>\r\n                      <div>\r\n                        {result.menu.description}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </TableContainer>\r\n\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div style={{ height: \"30px\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdvancedSearch;\r\n","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/components/Appbar.js",["117"],[],"/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/components/Login.js",[],[],"/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/admin/admin.js",[],[],"/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/admin/Signup.js",[],[],"/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/hooks/useAuth.js",[],[],"/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/admin/UserTable.js",["118","119","120"],[],"import React, { useState, useEffect } from 'react';\r\nimport useAxiosPrivate from '../hooks/useAxiosPrivate';\r\nimport { useNavigate } from \"react-router\";\r\nimport {\r\n    IconButton,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Button,\r\n    InputAdornment,\r\n    TextField,\r\n    Select,\r\n    MenuItem,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n} from '@mui/material';\r\nimport { Edit, Delete, ArrowBack } from '@mui/icons-material';\r\n\r\nconst UserTable = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [searchUsername, setSearchUsername] = useState('');\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [selectedUserId, setSelectedUserId] = useState(null);\r\n    const [selectedRole, setSelectedRole] = useState('');\r\n    const axiosPrivate = useAxiosPrivate();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, [searchUsername]);\r\n\r\n    const fetchUsers = async () => {\r\n        try {\r\n            const endpoint = searchUsername ? '/user' : '/allUsers';\r\n            const params = searchUsername ? { username: searchUsername } : {};\r\n\r\n            const response = await axiosPrivate.get(endpoint, { params });\r\n            setUsers(response.data);\r\n        } catch (error) {\r\n            console.log(error.response);\r\n            if (error.response && (error.response.status === 403)) {\r\n                window.alert('Unauthorized! You are not allowed to edit this record.');\r\n                navigate(\"/\", { replace: true });\r\n            } else if (error.response && error.response.status === 401) {\r\n                window.alert('Your session is expired Or you are not authorized to access this.');\r\n                navigate(\"/login\", { replace: true });\r\n            } else {\r\n                console.error('Error fetching users : ', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSearch = (e) => {\r\n        setSearchUsername(e.target.value);\r\n    };\r\n\r\n    const clearSearch = () => {\r\n        setSearchUsername('');\r\n    };\r\n\r\n    const handleRoleChangeClick = (userId) => {\r\n        setSelectedUserId(userId);\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    const handleDeleteClick = (userId) => {\r\n        const confirmed = window.confirm('Are you sure you want to delete this user?');\r\n        if (confirmed) {\r\n            deleteUser(userId);\r\n        }\r\n    };\r\n\r\n    const handleRoleChange = async () => {\r\n        try {\r\n            const response = await axiosPrivate.post(`/rolechange?roleName=${selectedRole}&userId=${selectedUserId}`);\r\n            setOpenDialog(false);\r\n            fetchUsers();\r\n        } catch (error) {\r\n            console.log(error.response);\r\n            if (error.response && (error.response.status === 403)) {\r\n                window.alert('Unauthorized! You are not allowed to edit this record.');\r\n                navigate(\"/\", { replace: true });\r\n            } else if (error.response && error.response.status === 401) {\r\n                window.alert('Your session is expired Or you are not authorized to access this.');\r\n                navigate(\"/login\", { replace: true });\r\n            } else {\r\n                console.error('Error changing roles : ', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const deleteUser = async (userId) => {\r\n        try {\r\n            const response = await axiosPrivate.post(`/deleteUser?userId=${userId}`);\r\n            fetchUsers();\r\n        } catch (error) {\r\n            console.log(error.response);\r\n            if (error.response && (error.response.status === 403)) {\r\n                window.alert('Unauthorized! You are not allowed to edit this record.');\r\n                navigate(\"/\", { replace: true });\r\n            } else if (error.response && error.response.status === 401) {\r\n                window.alert('Your session is expired Or you are not authorized to access this.');\r\n                navigate(\"/login\", { replace: true });\r\n            } else {\r\n                console.error('Error deleting users : ', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const filteredUsers = users.filter((user) => user.roles[0].name !== 'ADMIN');\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ marginBottom: '1em' }}>\r\n                <TextField\r\n                    type=\"text\"\r\n                    style={{backgroundColor : 'white',borderRadius : '0.5em'}}\r\n                    value={searchUsername}\r\n                    onChange={handleSearch}\r\n                    placeholder=\"Search by username\"\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton onClick={clearSearch}>\r\n                                    <ArrowBack />\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n            </div>\r\n            <TableContainer component={Paper}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Username</TableCell>\r\n                            <TableCell>Role</TableCell>\r\n                            <TableCell>Actions</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {filteredUsers.map((user) => (\r\n                            <TableRow key={user.id}>\r\n                                <TableCell>{user.username}</TableCell>\r\n                                <TableCell>{user.roles[0].name}</TableCell>\r\n                                <TableCell>\r\n                                    <IconButton onClick={() => handleRoleChangeClick(user.id)}>\r\n                                        <Edit />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={() => handleDeleteClick(user.id)}>\r\n                                        <Delete />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\r\n                <DialogTitle>Select Role</DialogTitle>\r\n                <DialogContent>\r\n                    <Select\r\n                        value={selectedRole}\r\n                        onChange={(e) => setSelectedRole(e.target.value)}\r\n                        fullWidth\r\n                    >\r\n                        <MenuItem value=\"EDITOR\">EDITOR</MenuItem>\r\n                        <MenuItem value=\"USER\">USER</MenuItem>\r\n                    </Select>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpenDialog(false)}>Cancel</Button>\r\n                    <Button onClick={handleRoleChange} color=\"primary\">Save</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserTable;\r\n","/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/services/CSVRenderer.js",[],[],"/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/hooks/useAxiosPrivate.js",[],[],"/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/hooks/useRefreshToken.js",[],[],"/Users/darshan/Documents/Nucleopedia/kbase-frontend/src/api/axios.js",[],[],{"ruleId":"121","severity":1,"message":"122","line":11,"column":10,"nodeType":"123","messageId":"124","endLine":11,"endColumn":22},{"ruleId":"121","severity":1,"message":"125","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":17},{"ruleId":"126","severity":1,"message":"127","line":47,"column":6,"nodeType":"128","endLine":47,"endColumn":8,"suggestions":"129"},{"ruleId":"126","severity":1,"message":"127","line":74,"column":6,"nodeType":"128","endLine":74,"endColumn":8,"suggestions":"130"},{"ruleId":"126","severity":1,"message":"127","line":101,"column":6,"nodeType":"128","endLine":101,"endColumn":8,"suggestions":"131"},{"ruleId":"126","severity":1,"message":"127","line":135,"column":6,"nodeType":"128","endLine":135,"endColumn":8,"suggestions":"132"},{"ruleId":"126","severity":1,"message":"133","line":192,"column":6,"nodeType":"128","endLine":192,"endColumn":62,"suggestions":"134"},{"ruleId":"121","severity":1,"message":"135","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":13},{"ruleId":"126","severity":1,"message":"136","line":35,"column":8,"nodeType":"128","endLine":35,"endColumn":16,"suggestions":"137"},{"ruleId":"121","severity":1,"message":"138","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":14},{"ruleId":"121","severity":1,"message":"139","line":87,"column":13,"nodeType":"123","messageId":"124","endLine":87,"endColumn":26},{"ruleId":"140","severity":1,"message":"141","line":271,"column":17,"nodeType":"142","endLine":271,"endColumn":141},{"ruleId":"140","severity":1,"message":"141","line":274,"column":17,"nodeType":"142","endLine":274,"endColumn":141},{"ruleId":"121","severity":1,"message":"135","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":13},{"ruleId":"121","severity":1,"message":"143","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":14},{"ruleId":"126","severity":1,"message":"144","line":36,"column":8,"nodeType":"128","endLine":36,"endColumn":24,"suggestions":"145"},{"ruleId":"121","severity":1,"message":"146","line":81,"column":19,"nodeType":"123","messageId":"124","endLine":81,"endColumn":27},{"ruleId":"121","severity":1,"message":"146","line":100,"column":19,"nodeType":"123","messageId":"124","endLine":100,"endColumn":27},"no-unused-vars","'AuthProvider' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'axiosPrivate' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["147"],["148"],["149"],["150"],"React Hook useEffect has a missing dependency: 'checkFormValidity'. Either include it or remove the dependency array.",["151"],"'Paper' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchMenuFiles'. Either include it or remove the dependency array.",["152"],"'Button' is defined but never used.","'fetchXLSXFile' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'AppBar' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["153"],"'response' is assigned a value but never used.",{"desc":"154","fix":"155"},{"desc":"154","fix":"156"},{"desc":"154","fix":"157"},{"desc":"154","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [axiosPrivate, navigate]",{"range":"165","text":"166"},{"range":"167","text":"166"},{"range":"168","text":"166"},{"range":"169","text":"166"},"Update the dependencies array to be: [department, func, application, menu, auth, desc, files, checkFormValidity]",{"range":"170","text":"171"},"Update the dependencies array to be: [fetchMenuFiles, menuId]",{"range":"172","text":"173"},"Update the dependencies array to be: [fetchUsers, searchUsername]",{"range":"174","text":"175"},[1872,1874],"[axiosPrivate, navigate]",[2867,2869],[3862,3864],[5048,5050],[6616,6672],"[department, func, application, menu, auth, desc, files, checkFormValidity]",[1397,1405],"[fetchMenuFiles, menuId]",[984,1000],"[fetchUsers, searchUsername]"]