{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\OneDrive - nucleusonline\\\\Documents\\\\Kbase\\\\kbase-frontend\\\\src\\\\components\\\\View.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography } from '@mui/material';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport useAxiosPrivate from '../hooks/useAxiosPrivate';\nimport { useParams } from 'react-router-dom';\nimport Appbar from './Appbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nconst View = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const axiosPrivate = useAxiosPrivate();\n  const [searchRes, setSearchRes] = useState([]);\n  const [numPages, setNumPages] = useState(null);\n  const [isFileRendered, setIsFileRendered] = useState(false);\n  const getFileContent = async (fileName, menuId) => {\n    try {\n      const response = await axiosPrivate.get(`http://localhost:8080/files/${fileName}/menu/${menuId}`);\n      if (response.status === 200) {\n        return response.data; // Access the 'data' property to get the content\n      } else {\n        console.error('Error retrieving file content:', response.status);\n        return '';\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      return '';\n    }\n  };\n  const fetchMediaFile = async fileUrl => {\n    try {\n      const response = await axiosPrivate.get(fileUrl, {\n        responseType: 'blob'\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching media file:', error);\n      return null;\n    }\n  };\n  const fetchPDFFile = async fileUrl => {\n    try {\n      const response = await axiosPrivate.get(fileUrl, {\n        responseType: 'blob'\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching PDF file:', error);\n      return null;\n    }\n  };\n  const getExtension = path => {\n    const baseName = path.split(/[\\\\/]/).pop();\n    const pos = baseName.lastIndexOf('.');\n    if (baseName === '' || pos < 1) {\n      return '';\n    }\n    return baseName.slice(pos + 1);\n  };\n  const url = `http://localhost:8080/search/${id}`;\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await axiosPrivate.get(url);\n        setSearchRes(response.data);\n      } catch (error) {\n        console.error('Error fetching search results:', error);\n      }\n    };\n    getData();\n  }, []);\n  const renderFile = item => {\n    const extension = getExtension(item.filePath);\n    const fileUrl = `http://localhost:8080/files/${item.fileName}/menu/${item.menu.menuId}`;\n    switch (extension) {\n      case 'txt':\n        try {\n          const textContent = getFileContent(item.fileName, item.menu.menuId);\n          return \"Hello World\";\n        } catch (error) {\n          console.error('Error rendering text file:', error);\n          /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Error loading text file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this);\n        }\n        break;\n      case 'jpg':\n      case 'jpeg':\n      case 'png':\n        const getImage = async () => {\n          try {\n            const mediaBlob = await fetchMediaFile(fileUrl);\n            if (mediaBlob) {\n              const objectURL = URL.createObjectURL(mediaBlob);\n              console.log(objectURL);\n              return /*#__PURE__*/_jsxDEV(\"img\", {\n                src: objectURL,\n                alt: item.fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 20\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Error loading image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 20\n              }, this);\n            }\n          } catch (error) {\n            console.error('Error rendering image:', error);\n            return /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Error loading image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 16\n            }, this);\n          }\n        };\n        if (!isFileRendered) {\n          setIsFileRendered(true);\n          getImage();\n        }\n        break;\n      case 'mp3':\n        const getAudio = async () => {\n          try {\n            const mediaBlob = await fetchMediaFile(fileUrl);\n            if (mediaBlob) {\n              const objectURL = URL.createObjectURL(mediaBlob);\n              return /*#__PURE__*/_jsxDEV(\"img\", {\n                src: objectURL,\n                alt: item.fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 20\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Error loading audio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 20\n              }, this);\n            }\n          } catch (error) {\n            console.error('Error rendering audio:', error);\n            return /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Error loading audio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 16\n            }, this);\n          }\n        };\n        if (!isFileRendered) {\n          setIsFileRendered(true);\n          getAudio();\n        }\n        break;\n      case 'mp4':\n      case 'mov':\n        const getVideo = async () => {\n          try {\n            const mediaBlob = await fetchMediaFile(fileUrl);\n            if (mediaBlob) {\n              const objectURL = URL.createObjectURL(mediaBlob);\n              return /*#__PURE__*/_jsxDEV(\"img\", {\n                src: objectURL,\n                alt: item.fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 20\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Error loading video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 20\n              }, this);\n            }\n          } catch (error) {\n            console.error('Error rendering video:', error);\n            return /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Error loading video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 16\n            }, this);\n          }\n        };\n        if (!isFileRendered) {\n          setIsFileRendered(true);\n          getVideo();\n        }\n        break;\n      case 'pdf':\n        const getPdf = async () => {\n          try {\n            const pdfBlob = await fetchPDFFile(fileUrl);\n            if (pdfBlob) {\n              const pdfObjectURL = URL.createObjectURL(pdfBlob);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  height: '100vh'\n                },\n                children: /*#__PURE__*/_jsxDEV(Document, {\n                  file: pdfObjectURL,\n                  onLoadSuccess: _ref => {\n                    let {\n                      numPages\n                    } = _ref;\n                    return setNumPages(numPages);\n                  },\n                  children: Array.from(new Array(numPages), (_, index) => /*#__PURE__*/_jsxDEV(Page, {\n                    pageNumber: index + 1,\n                    width: window.innerWidth * 0.8\n                  }, `page_${index + 1}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Error loading PDF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 20\n              }, this);\n            }\n          } catch (error) {\n            console.error('Error rendering PDF:', error);\n            return /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Error loading PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 16\n            }, this);\n          }\n        };\n        if (!isFileRendered) {\n          setIsFileRendered(true);\n          getPdf();\n        }\n        break;\n      case 'docx':\n        /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: `https://view.officeapps.live.com/op/embed.aspx?src=${fileUrl}`,\n          width: \"100%\",\n          height: \"600px\",\n          frameBorder: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 1\n        }, this);\n        break;\n      case 'xlsx':\n        /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: `https://view.officeapps.live.com/op/embed.aspx?src=${fileUrl}`,\n          width: \"100%\",\n          height: \"600px\",\n          frameBorder: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 1\n        }, this);\n        break;\n      default:\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Unsupported file format\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 8\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: searchRes.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderFile(item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(View, \"nMtxTzJuMvQOWKTjPg++wtk47tY=\", false, function () {\n  return [useParams, useAxiosPrivate];\n});\n_c = View;\nexport default View;\nvar _c;\n$RefreshReg$(_c, \"View\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Document","Page","pdfjs","useAxiosPrivate","useParams","Appbar","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","View","_s","id","axiosPrivate","searchRes","setSearchRes","numPages","setNumPages","isFileRendered","setIsFileRendered","getFileContent","fileName","menuId","response","get","status","data","console","error","fetchMediaFile","fileUrl","responseType","fetchPDFFile","getExtension","path","baseName","split","pop","pos","lastIndexOf","slice","url","getData","renderFile","item","extension","filePath","menu","textContent","children","_jsxFileName","lineNumber","columnNumber","getImage","mediaBlob","objectURL","URL","createObjectURL","log","src","alt","getAudio","getVideo","getPdf","pdfBlob","pdfObjectURL","style","display","justifyContent","alignItems","height","file","onLoadSuccess","_ref","Array","from","_","index","pageNumber","width","window","innerWidth","frameBorder","map","_c","$RefreshReg$"],"sources":["D:/OneDrive/OneDrive - nucleusonline/Documents/Kbase/kbase-frontend/src/components/View.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\nimport useAxiosPrivate from '../hooks/useAxiosPrivate';\r\nimport { useParams } from 'react-router-dom';\r\nimport Appbar from './Appbar';\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nconst View = () => {\r\n    const { id } = useParams();\r\n    const axiosPrivate = useAxiosPrivate();\r\n\r\n    const [searchRes, setSearchRes] = useState([]);\r\n    const [numPages, setNumPages] = useState(null);\r\n\r\n    const [isFileRendered, setIsFileRendered] = useState(false);\r\n\r\n    const getFileContent = async (fileName, menuId) => {\r\n        try {\r\n            const response = await axiosPrivate.get(`http://localhost:8080/files/${fileName}/menu/${menuId}`);\r\n\r\n            if (response.status === 200) {\r\n                return response.data; // Access the 'data' property to get the content\r\n            } else {\r\n                console.error('Error retrieving file content:', response.status);\r\n                return '';\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n            return '';\r\n        }\r\n    };\r\n\r\n    const fetchMediaFile = async (fileUrl) => {\r\n        try {\r\n            const response = await axiosPrivate.get(fileUrl, { responseType: 'blob' });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching media file:', error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const fetchPDFFile = async (fileUrl) => {\r\n        try {\r\n            const response = await axiosPrivate.get(fileUrl, { responseType: 'blob' });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching PDF file:', error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const getExtension = (path) => {\r\n        const baseName = path.split(/[\\\\/]/).pop();\r\n        const pos = baseName.lastIndexOf('.');\r\n        if (baseName === '' || pos < 1) {\r\n            return '';\r\n        }\r\n        return baseName.slice(pos + 1);\r\n    };\r\n\r\n    const url = `http://localhost:8080/search/${id}`;\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            try {\r\n                const response = await axiosPrivate.get(url);\r\n                setSearchRes(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching search results:', error);\r\n            }\r\n        };\r\n\r\n        getData();\r\n    }, []);\r\n\r\n    const renderFile = (item) => {\r\n        const extension = getExtension(item.filePath);\r\n        const fileUrl = `http://localhost:8080/files/${item.fileName}/menu/${item.menu.menuId}`;\r\n\r\n        switch (extension) {\r\n            case 'txt':\r\n\r\n                try {\r\n                    const textContent = getFileContent(item.fileName, item.menu.menuId);\r\n                    return \"Hello World\";\r\n                } catch (error) {\r\n                    console.error('Error rendering text file:', error);\r\n                    <Typography>Error loading text file</Typography>;\r\n                }\r\n                break;\r\n               \r\n            case 'jpg':\r\n            case 'jpeg':\r\n            case 'png':\r\nconst getImage = async () => {\r\n    try {\r\n        const mediaBlob = await fetchMediaFile(fileUrl);\r\n        if (mediaBlob) {\r\n            const objectURL = URL.createObjectURL(mediaBlob);\r\n            console.log(objectURL);\r\n            return <img src={objectURL} alt={item.fileName} />;\r\n\r\n        } else {\r\n            return <Typography>Error loading image</Typography>;\r\n        }\r\n    } catch (error) {\r\n        console.error('Error rendering image:', error);\r\n        return <Typography>Error loading image</Typography>;\r\n    }\r\n}\r\nif (!isFileRendered) {\r\n    setIsFileRendered(true);\r\n    getImage();\r\n}\r\nbreak;\r\n            case 'mp3':\r\nconst getAudio = async () => {\r\n    try {\r\n        const mediaBlob = await fetchMediaFile(fileUrl);\r\n        if (mediaBlob) {\r\n            const objectURL = URL.createObjectURL(mediaBlob);\r\n            return <img src={objectURL} alt={item.fileName} />;\r\n        } else {\r\n            return <Typography>Error loading audio</Typography>;\r\n        }\r\n    } catch (error) {\r\n        console.error('Error rendering audio:', error);\r\n        return <Typography>Error loading audio</Typography>;\r\n    }\r\n}\r\nif (!isFileRendered) {\r\n    setIsFileRendered(true);\r\n    getAudio();\r\n}\r\nbreak; \r\n            case 'mp4':\r\n            case 'mov':\r\nconst getVideo = async () => {\r\n    try {\r\n        const mediaBlob = await fetchMediaFile(fileUrl);\r\n        if (mediaBlob) {\r\n            const objectURL = URL.createObjectURL(mediaBlob);\r\n            return <img src={objectURL} alt={item.fileName} />;\r\n        } else {\r\n            return <Typography>Error loading video</Typography>;\r\n        }\r\n    } catch (error) {\r\n        console.error('Error rendering video:', error);\r\n        return <Typography>Error loading video</Typography>;\r\n    }\r\n}\r\nif (!isFileRendered) {\r\n    setIsFileRendered(true);\r\n    getVideo();\r\n}\r\nbreak;\r\n            case 'pdf':\r\nconst getPdf = async () => {\r\n    try {\r\n        const pdfBlob = await fetchPDFFile(fileUrl);\r\n        if (pdfBlob) {\r\n            const pdfObjectURL = URL.createObjectURL(pdfBlob);\r\n            return (\r\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n                    <Document file={pdfObjectURL} onLoadSuccess={({ numPages }) => setNumPages(numPages)}>\r\n                        {Array.from(new Array(numPages), (_, index) => (\r\n                            <Page key={`page_${index + 1}`} pageNumber={index + 1} width={window.innerWidth * 0.8} />\r\n                        ))}\r\n                    </Document>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <Typography>Error loading PDF</Typography>;\r\n        }\r\n    } catch (error) {\r\n        console.error('Error rendering PDF:', error);\r\n        return <Typography>Error loading PDF</Typography>;\r\n    }\r\n}\r\nif (!isFileRendered) {\r\n    setIsFileRendered(true);\r\n    getPdf();\r\n}\r\nbreak;\r\n            case 'docx':\r\n<iframe src={`https://view.officeapps.live.com/op/embed.aspx?src=${fileUrl}`} width=\"100%\" height=\"600px\" frameBorder=\"0\" />\r\nbreak;\r\n            case 'xlsx':\r\n<iframe src={`https://view.officeapps.live.com/op/embed.aspx?src=${fileUrl}`} width=\"100%\" height=\"600px\" frameBorder=\"0\" />\r\nbreak;\r\n            default:\r\nreturn <Typography>Unsupported file format</Typography>;\r\n        }\r\n    };\r\n\r\nreturn (\r\n    <div>\r\n        {searchRes.map((item) => (\r\n            <div key={item.id}>\r\n                {renderFile(item)}\r\n            </div>\r\n        ))}\r\n    </div>\r\n);\r\n};\r\n\r\nexport default View;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}