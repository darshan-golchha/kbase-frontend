{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\OneDrive - nucleusonline\\\\Documents\\\\Kbase\\\\kbase-frontend\\\\src\\\\admin\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [userName, setUserName] = useState('');\n  const [passWord, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleSignup = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/login/create?userName=${userName}&passWord=${passWord}`);\n      const data = await response.json();\n      if (response.ok) {\n        setErrorMessage('');\n        setSuccessMessage('User created successfully!');\n      } else if (response.status === 409) {\n        setErrorMessage('A user with the username already exists. Please choose another username.');\n        setSuccessMessage('');\n      } else {\n        setErrorMessage('Error occurred while creating the user.');\n        setSuccessMessage('');\n      }\n    } catch (error) {\n      setErrorMessage('Error occurred while creating the user.');\n      setSuccessMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Username\",\n      value: userName,\n      onChange: e => setUserName(e.target.value),\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Password\",\n      value: passWord,\n      onChange: e => setPassword(e.target.value),\n      type: \"password\",\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSignup,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 24\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"success\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"UfBKqfR3uQWVAqYuyiGj3WqxM4o=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","jsxDEV","_jsxDEV","Signup","_s","userName","setUserName","passWord","setPassword","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleSignup","response","fetch","data","json","ok","status","error","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","e","target","fullWidth","margin","type","color","onClick","_c","$RefreshReg$"],"sources":["D:/OneDrive/OneDrive - nucleusonline/Documents/Kbase/kbase-frontend/src/admin/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Typography } from '@mui/material';\r\n\r\nconst Signup = () => {\r\n  const [userName, setUserName] = useState('');\r\n  const [passWord, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const handleSignup = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/login/create?userName=${userName}&passWord=${passWord}`);\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setErrorMessage('');\r\n        setSuccessMessage('User created successfully!');\r\n      } else if (response.status === 409) {\r\n        setErrorMessage('A user with the username already exists. Please choose another username.');\r\n        setSuccessMessage('');\r\n      } else {\r\n        setErrorMessage('Error occurred while creating the user.');\r\n        setSuccessMessage('');\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage('Error occurred while creating the user.');\r\n      setSuccessMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Sign Up</Typography>\r\n      <TextField\r\n        label=\"Username\"\r\n        value={userName}\r\n        onChange={(e) => setUserName(e.target.value)}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Password\"\r\n        value={passWord}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        type=\"password\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSignup}>\r\n        Sign Up\r\n      </Button>\r\n      {errorMessage && <Typography color=\"error\">{errorMessage}</Typography>}\r\n      {successMessage && <Typography color=\"success\">{successMessage}</Typography>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}