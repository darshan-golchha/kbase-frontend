{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\OneDrive - nucleusonline\\\\Documents\\\\Kbase\\\\kbase-frontend\\\\src\\\\services\\\\CSVRenderer.js\";\nimport React from 'react';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CSVRenderer = _ref => {\n  let {\n    csvData\n  } = _ref;\n  const renderCsvData = () => {\n    try {\n      const parsedData = Papa.parse(csvData, {\n        header: true,\n        // Treat the first row as headers\n        skipEmptyLines: true // Skip empty lines\n      });\n\n      if (parsedData.errors.length > 0) {\n        // Handle CSV parsing errors\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Failed to parse CSV data: \", parsedData.errors[0].message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 16\n        }, this);\n      }\n      if (parsedData.data.length === 0) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No data found in the CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 16\n        }, this);\n      }\n      const headers = Object.keys(parsedData.data[0]).map((field, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n        children: field\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this));\n      const rows = parsedData.data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: Object.values(row).map((value, colIndex) =>\n        /*#__PURE__*/\n        // Add inline styles with borders to each cell\n        _jsxDEV(\"td\", {\n          style: {\n            border: '1px solid #000',\n            padding: '8px'\n          },\n          children: value\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this));\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          borderCollapse: 'collapse',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: headers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: rows\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    } catch (error) {\n      // Handle any unexpected errors during CSV parsing\n      console.error('Error rendering CSV data:', error);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error rendering CSV data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: csvData ? renderCsvData() : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading CSV data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 36\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c = CSVRenderer;\nexport default CSVRenderer;\nvar _c;\n$RefreshReg$(_c, \"CSVRenderer\");","map":{"version":3,"names":["React","Papa","jsxDEV","_jsxDEV","CSVRenderer","_ref","csvData","renderCsvData","parsedData","parse","header","skipEmptyLines","errors","length","children","message","fileName","_jsxFileName","lineNumber","columnNumber","data","headers","Object","keys","map","field","index","rows","row","rowIndex","values","value","colIndex","style","border","padding","borderCollapse","width","error","console","_c","$RefreshReg$"],"sources":["D:/OneDrive/OneDrive - nucleusonline/Documents/Kbase/kbase-frontend/src/services/CSVRenderer.js"],"sourcesContent":["import React from 'react';\r\nimport Papa from 'papaparse';\r\n\r\nconst CSVRenderer = ({ csvData }) => {\r\n  const renderCsvData = () => {\r\n    try {\r\n      const parsedData = Papa.parse(csvData, {\r\n        header: true, // Treat the first row as headers\r\n        skipEmptyLines: true, // Skip empty lines\r\n      });\r\n\r\n      if (parsedData.errors.length > 0) {\r\n        // Handle CSV parsing errors\r\n        return <div>Failed to parse CSV data: {parsedData.errors[0].message}</div>;\r\n      }\r\n\r\n      if (parsedData.data.length === 0) {\r\n        return <div>No data found in the CSV</div>;\r\n      }\r\n\r\n      const headers = Object.keys(parsedData.data[0]).map((field, index) => (\r\n        <th key={index}>{field}</th>\r\n      ));\r\n\r\n      const rows = parsedData.data.map((row, rowIndex) => (\r\n        <tr key={rowIndex}>\r\n          {Object.values(row).map((value, colIndex) => (\r\n            // Add inline styles with borders to each cell\r\n            <td key={colIndex} style={{ border: '1px solid #000', padding: '8px' }}>\r\n              {value}\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      ));\r\n\r\n      return (\r\n        <table style={{ borderCollapse: 'collapse', width: '100%' }}>\r\n          <thead>\r\n            <tr>{headers}</tr>\r\n          </thead>\r\n          <tbody>{rows}</tbody>\r\n        </table>\r\n      );\r\n    } catch (error) {\r\n      // Handle any unexpected errors during CSV parsing\r\n      console.error('Error rendering CSV data:', error);\r\n      return <div>Error rendering CSV data</div>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {csvData ? renderCsvData() : <div>Loading CSV data...</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CSVRenderer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}