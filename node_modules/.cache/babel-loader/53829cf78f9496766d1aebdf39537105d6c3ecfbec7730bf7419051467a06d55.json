{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\OneDrive - nucleusonline\\\\Documents\\\\Kbase\\\\kbase-frontend\\\\src\\\\components\\\\View.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography } from '@mui/material';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport useAxiosPrivate from '../hooks/useAxiosPrivate';\nimport { useParams } from 'react-router-dom';\nimport Appbar from './Appbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nconst View = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const axiosPrivate = useAxiosPrivate();\n  const [searchRes, setSearchRes] = useState([]);\n  const [numPages, setNumPages] = useState(null);\n  const [isFileRendered, setIsFileRendered] = useState(false);\n  const [fileContent, setFileContent] = useState(null);\n  useEffect(() => {\n    const fetchSearchResults = async () => {\n      try {\n        const response = await axiosPrivate.get(`http://localhost:8080/search/${id}`);\n        setSearchRes(response.data);\n      } catch (error) {\n        console.error('Error fetching search results:', error);\n        setSearchRes([]);\n      }\n    };\n    fetchSearchResults();\n  }, [id, axiosPrivate]);\n  const getFileContent = async (fileName, menuId) => {\n    try {\n      const response = await axiosPrivate.get(`http://localhost:8080/files/${fileName}/menu/${menuId}`);\n      if (response.status === 200) {\n        return response.data; // Access the 'data' property to get the content\n      } else {\n        console.error('Error retrieving file content:', response.status);\n        return '';\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      return '';\n    }\n  };\n  const fetchMediaFile = async fileUrl => {\n    try {\n      const response = await axiosPrivate.get(fileUrl, {\n        responseType: 'blob'\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching media file:', error);\n      return null;\n    }\n  };\n  const fetchPDFFile = async fileUrl => {\n    try {\n      const response = await axiosPrivate.get(fileUrl, {\n        responseType: 'blob'\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching PDF file:', error);\n      return null;\n    }\n  };\n  const getPdf = async fileUrl => {\n    try {\n      const pdfBlob = await fetchPDFFile(fileUrl);\n      if (pdfBlob) {\n        const pdfObjectURL = URL.createObjectURL(pdfBlob);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '100vh',\n            overflowY: 'auto'\n          },\n          children: /*#__PURE__*/_jsxDEV(Document, {\n            file: pdfObjectURL,\n            onLoadSuccess: _ref => {\n              let {\n                numPages\n              } = _ref;\n              return setNumPages(numPages);\n            },\n            children: Array.from(new Array(numPages), (_, index) => /*#__PURE__*/_jsxDEV(Page, {\n              pageNumber: index + 1,\n              width: window.innerWidth\n            }, `page_${index + 1}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Error loading PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 20\n        }, this);\n      }\n    } catch (error) {\n      console.error('Error rendering PDF:', error);\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Error loading PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 18\n      }, this);\n    }\n  };\n  const getExtension = path => {\n    const baseName = path.split(/[\\\\/]/).pop();\n    const pos = baseName.lastIndexOf('.');\n    if (baseName === '' || pos < 1) {\n      return '';\n    }\n    return baseName.slice(pos + 1);\n  };\n  useEffect(() => {\n    const fetchSearchResults = async () => {\n      try {\n        const response = await axiosPrivate.get(`http://localhost:8080/search/${id}`);\n        setSearchRes(response.data);\n      } catch (error) {\n        console.error('Error fetching search results:', error);\n        setSearchRes([]);\n      }\n    };\n    fetchSearchResults();\n  }, [id, axiosPrivate]);\n  const renderFile = item => {\n    const extension = getExtension(item.filePath);\n    const fileUrl = `http://localhost:8080/files/${item.fileName}/menu/${item.menu.menuId}`;\n    switch (extension) {\n      case 'txt':\n        const getText = async () => {\n          try {\n            const textContent = await getFileContent(item.fileName, item.menu.menuId);\n            return `${textContent}`;\n          } catch (error) {\n            console.error('Error rendering text file:', error);\n            return 'Error loading text file';\n          }\n        };\n        if (!isFileRendered) {\n          setIsFileRendered(true);\n          (async () => {\n            const content = await getText();\n            setFileContent( /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 40\n            }, this));\n          })();\n        }\n        break;\n      case 'jpg':\n      case 'jpeg':\n      case 'png':\n        const getImage = async () => {\n          try {\n            const mediaBlob = await fetchMediaFile(fileUrl);\n            if (mediaBlob) {\n              const objectURL = URL.createObjectURL(mediaBlob);\n              console.log(objectURL);\n              return /*#__PURE__*/_jsxDEV(\"img\", {\n                src: objectURL,\n                alt: item.fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 36\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Error loading image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 36\n              }, this);\n            }\n          } catch (error) {\n            console.error('Error rendering image:', error);\n            return /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Error loading image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 32\n            }, this);\n          }\n        };\n        if (!isFileRendered) {\n          setIsFileRendered(true);\n          (async () => {\n            const content = await getImage();\n            setFileContent(content);\n          })();\n        }\n        break;\n      case 'mp3':\n        const getAudio = async () => {\n          try {\n            const mediaBlob = await fetchMediaFile(fileUrl);\n            if (mediaBlob) {\n              const objectURL = URL.createObjectURL(mediaBlob);\n              return /*#__PURE__*/_jsxDEV(\"img\", {\n                src: objectURL,\n                alt: item.fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 36\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Error loading audio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 36\n              }, this);\n            }\n          } catch (error) {\n            console.error('Error rendering audio:', error);\n            return /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Error loading audio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 32\n            }, this);\n          }\n        };\n        if (!isFileRendered) {\n          setIsFileRendered(true);\n          (async () => {\n            const content = await getAudio();\n            setFileContent(content);\n          })();\n        }\n        break;\n      case 'mp4':\n      case 'mov':\n        const getVideo = async () => {\n          try {\n            const mediaBlob = await fetchMediaFile(fileUrl);\n            if (mediaBlob) {\n              const objectURL = URL.createObjectURL(mediaBlob);\n              return /*#__PURE__*/_jsxDEV(\"video\", {\n                src: objectURL,\n                controls: true,\n                children: \"Your browser does not support the video tag.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 36\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Error loading video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 36\n              }, this);\n            }\n          } catch (error) {\n            console.error('Error rendering video:', error);\n            return /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Error loading video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 32\n            }, this);\n          }\n        };\n        if (!isFileRendered) {\n          setIsFileRendered(true);\n          (async () => {\n            const content = await getVideo();\n            setFileContent(content);\n          })();\n        }\n        break;\n      case 'pdf':\n        if (!isFileRendered) {\n          setIsFileRendered(true);\n          (async () => {\n            const pdfBlob = await fetchPDFFile(fileUrl);\n            if (pdfBlob) {\n              const pdfObjectURL = URL.createObjectURL(pdfBlob);\n              setFileContent(await getPdf(pdfObjectURL));\n            } else {\n              setFileContent( /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Error loading PDF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 44\n              }, this));\n            }\n          })();\n        }\n        break;\n      case 'docx':\n        /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: `https://view.officeapps.live.com/op/embed.aspx?src=${fileUrl}`,\n          width: \"100%\",\n          height: \"600px\",\n          frameBorder: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }, this);\n        break;\n      case 'xlsx':\n        /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: `https://view.officeapps.live.com/op/embed.aspx?src=${fileUrl}`,\n          width: \"100%\",\n          height: \"600px\",\n          frameBorder: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }, this);\n        break;\n      default:\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Unsupported file format\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Appbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: '64px'\n      },\n      children: searchRes.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [renderFile(item), fileContent]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 9\n  }, this);\n};\n_s(View, \"QmCQuFe1pbEMMakZbhzELEMwZWE=\", false, function () {\n  return [useParams, useAxiosPrivate];\n});\n_c = View;\nexport default View;\nvar _c;\n$RefreshReg$(_c, \"View\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Document","Page","pdfjs","useAxiosPrivate","useParams","Appbar","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","View","_s","id","axiosPrivate","searchRes","setSearchRes","numPages","setNumPages","isFileRendered","setIsFileRendered","fileContent","setFileContent","fetchSearchResults","response","get","data","error","console","getFileContent","fileName","menuId","status","fetchMediaFile","fileUrl","responseType","fetchPDFFile","getPdf","pdfBlob","pdfObjectURL","URL","createObjectURL","style","height","overflowY","children","file","onLoadSuccess","_ref","Array","from","_","index","pageNumber","width","window","innerWidth","_jsxFileName","lineNumber","columnNumber","getExtension","path","baseName","split","pop","pos","lastIndexOf","slice","renderFile","item","extension","filePath","menu","getText","textContent","content","getImage","mediaBlob","objectURL","log","src","alt","getAudio","getVideo","controls","frameBorder","paddingTop","map","_c","$RefreshReg$"],"sources":["D:/OneDrive/OneDrive - nucleusonline/Documents/Kbase/kbase-frontend/src/components/View.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\nimport useAxiosPrivate from '../hooks/useAxiosPrivate';\r\nimport { useParams } from 'react-router-dom';\r\nimport Appbar from './Appbar';\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nconst View = () => {\r\n    const { id } = useParams();\r\n    const axiosPrivate = useAxiosPrivate();\r\n\r\n    const [searchRes, setSearchRes] = useState([]);\r\n    const [numPages, setNumPages] = useState(null);\r\n\r\n    const [isFileRendered, setIsFileRendered] = useState(false);\r\n    const [fileContent, setFileContent] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchSearchResults = async () => {\r\n            try {\r\n                const response = await axiosPrivate.get(`http://localhost:8080/search/${id}`);\r\n                setSearchRes(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching search results:', error);\r\n                setSearchRes([]);\r\n            }\r\n        };\r\n\r\n        fetchSearchResults();\r\n    }, [id, axiosPrivate]);\r\n\r\n    const getFileContent = async (fileName, menuId) => {\r\n        try {\r\n            const response = await axiosPrivate.get(`http://localhost:8080/files/${fileName}/menu/${menuId}`);\r\n\r\n            if (response.status === 200) {\r\n                return response.data; // Access the 'data' property to get the content\r\n            } else {\r\n                console.error('Error retrieving file content:', response.status);\r\n                return '';\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n            return '';\r\n        }\r\n    };\r\n\r\n    const fetchMediaFile = async (fileUrl) => {\r\n        try {\r\n            const response = await axiosPrivate.get(fileUrl, { responseType: 'blob' });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching media file:', error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const fetchPDFFile = async (fileUrl) => {\r\n        try {\r\n            const response = await axiosPrivate.get(fileUrl, { responseType: 'blob' });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching PDF file:', error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const getPdf = async (fileUrl) => {\r\n        try {\r\n          const pdfBlob = await fetchPDFFile(fileUrl);\r\n          if (pdfBlob) {\r\n            const pdfObjectURL = URL.createObjectURL(pdfBlob);\r\n            return (\r\n              <div style={{ height: '100vh', overflowY: 'auto' }}>\r\n                <Document file={pdfObjectURL} onLoadSuccess={({ numPages }) => setNumPages(numPages)}>\r\n                  {Array.from(new Array(numPages), (_, index) => (\r\n                    <Page key={`page_${index + 1}`} pageNumber={index + 1} width={window.innerWidth} />\r\n                  ))}\r\n                </Document>\r\n              </div>\r\n            );\r\n          } else {\r\n            return <Typography>Error loading PDF</Typography>;\r\n          }\r\n        } catch (error) {\r\n          console.error('Error rendering PDF:', error);\r\n          return <Typography>Error loading PDF</Typography>;\r\n        }\r\n      };\r\n      \r\n\r\n    const getExtension = (path) => {\r\n        const baseName = path.split(/[\\\\/]/).pop();\r\n        const pos = baseName.lastIndexOf('.');\r\n        if (baseName === '' || pos < 1) {\r\n            return '';\r\n        }\r\n        return baseName.slice(pos + 1);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchSearchResults = async () => {\r\n            try {\r\n                const response = await axiosPrivate.get(`http://localhost:8080/search/${id}`);\r\n                setSearchRes(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching search results:', error);\r\n                setSearchRes([]);\r\n            }\r\n        };\r\n\r\n        fetchSearchResults();\r\n    }, [id, axiosPrivate]);\r\n\r\n\r\n    const renderFile = (item) => {\r\n        const extension = getExtension(item.filePath);\r\n        const fileUrl = `http://localhost:8080/files/${item.fileName}/menu/${item.menu.menuId}`;\r\n\r\n        switch (extension) {\r\n            case 'txt':\r\n                const getText = async () => {\r\n                    try {\r\n                        const textContent = await getFileContent(item.fileName, item.menu.menuId);\r\n                        return `${textContent}`\r\n                    } catch (error) {\r\n                        console.error('Error rendering text file:', error);\r\n                        return 'Error loading text file';\r\n                    }\r\n                }\r\n\r\n                if (!isFileRendered) {\r\n                    setIsFileRendered(true);\r\n                    (async () => {\r\n                        const content = await getText();\r\n                        setFileContent(<pre>{content}</pre>);\r\n                    })();\r\n                }\r\n                break;\r\n            case 'jpg':\r\n            case 'jpeg':\r\n            case 'png':\r\n                const getImage = async () => {\r\n                    try {\r\n                        const mediaBlob = await fetchMediaFile(fileUrl);\r\n                        if (mediaBlob) {\r\n                            const objectURL = URL.createObjectURL(mediaBlob);\r\n                            console.log(objectURL);\r\n                            return <img src={objectURL} alt={item.fileName} />;\r\n\r\n                        } else {\r\n                            return <Typography>Error loading image</Typography>;\r\n                        }\r\n                    } catch (error) {\r\n                        console.error('Error rendering image:', error);\r\n                        return <Typography>Error loading image</Typography>;\r\n                    }\r\n                }\r\n                if (!isFileRendered) {\r\n                    setIsFileRendered(true);\r\n                    (async () => {\r\n                        const content = await getImage();\r\n                        setFileContent(content);\r\n                    })();\r\n                }\r\n                break;\r\n            case 'mp3':\r\n                const getAudio = async () => {\r\n                    try {\r\n                        const mediaBlob = await fetchMediaFile(fileUrl);\r\n                        if (mediaBlob) {\r\n                            const objectURL = URL.createObjectURL(mediaBlob);\r\n                            return <img src={objectURL} alt={item.fileName} />;\r\n                        } else {\r\n                            return <Typography>Error loading audio</Typography>;\r\n                        }\r\n                    } catch (error) {\r\n                        console.error('Error rendering audio:', error);\r\n                        return <Typography>Error loading audio</Typography>;\r\n                    }\r\n                }\r\n                if (!isFileRendered) {\r\n                    setIsFileRendered(true);\r\n                    (async () => {\r\n                        const content = await getAudio();\r\n                        setFileContent(content);\r\n                    })();\r\n                }\r\n                break;\r\n            case 'mp4':\r\n            case 'mov':\r\n                const getVideo = async () => {\r\n                    try {\r\n                        const mediaBlob = await fetchMediaFile(fileUrl);\r\n                        if (mediaBlob) {\r\n                            const objectURL = URL.createObjectURL(mediaBlob);\r\n                            return <video src={objectURL} controls>\r\n                                Your browser does not support the video tag.\r\n                            </video>;\r\n                        } else {\r\n                            return <Typography>Error loading video</Typography>;\r\n                        }\r\n                    } catch (error) {\r\n                        console.error('Error rendering video:', error);\r\n                        return <Typography>Error loading video</Typography>;\r\n                    }\r\n                }\r\n                if (!isFileRendered) {\r\n                    setIsFileRendered(true);\r\n                    (async () => {\r\n                        const content = await getVideo();\r\n                        setFileContent(content);\r\n                    })();\r\n                }\r\n                break;\r\n            case 'pdf':\r\n                if (!isFileRendered) {\r\n                    setIsFileRendered(true);\r\n                    (async () => {\r\n                        const pdfBlob = await fetchPDFFile(fileUrl);\r\n                        if (pdfBlob) {\r\n                            const pdfObjectURL = URL.createObjectURL(pdfBlob);\r\n                            setFileContent(await getPdf(pdfObjectURL));\r\n                        } else {\r\n                            setFileContent(<Typography>Error loading PDF</Typography>);\r\n                        }\r\n                    })();\r\n                }\r\n                break;\r\n            case 'docx':\r\n                <iframe src={`https://view.officeapps.live.com/op/embed.aspx?src=${fileUrl}`} width=\"100%\" height=\"600px\" frameBorder=\"0\" />\r\n                break;\r\n            case 'xlsx':\r\n                <iframe src={`https://view.officeapps.live.com/op/embed.aspx?src=${fileUrl}`} width=\"100%\" height=\"600px\" frameBorder=\"0\" />\r\n                break;\r\n            default:\r\n                return <Typography>Unsupported file format</Typography>;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Appbar />\r\n            <div style={{ paddingTop: '64px' }}>\r\n                {searchRes.map((item) => (\r\n                    <div key={item.id}>\r\n                        {renderFile(item)}\r\n                        {fileContent}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default View;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,QAAQ,WAAW;AACjD,OAAOC,eAAe,MAAM,0BAA0B;AACtD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9BL,KAAK,CAACM,mBAAmB,CAACC,SAAS,GAAI,iDAAgDP,KAAK,CAACQ,OAAQ,gBAAe;AAEpH,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAMU,YAAY,GAAGX,eAAe,CAAC,CAAC;EAEtC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAM,CAACsB,cAAc,EAAEC,iBAAiB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ,MAAMyB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,YAAY,CAACW,GAAG,CAAE,gCAA+BZ,EAAG,EAAC,CAAC;QAC7EG,YAAY,CAACQ,QAAQ,CAACE,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDX,YAAY,CAAC,EAAE,CAAC;MACpB;IACJ,CAAC;IAEDO,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACV,EAAE,EAAEC,YAAY,CAAC,CAAC;EAEtB,MAAMe,cAAc,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,MAAM,KAAK;IAC/C,IAAI;MACA,MAAMP,QAAQ,GAAG,MAAMV,YAAY,CAACW,GAAG,CAAE,+BAA8BK,QAAS,SAAQC,MAAO,EAAC,CAAC;MAEjG,IAAIP,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;QACzB,OAAOR,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC1B,CAAC,MAAM;QACHE,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEH,QAAQ,CAACQ,MAAM,CAAC;QAChE,OAAO,EAAE;MACb;IACJ,CAAC,CAAC,OAAOL,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,OAAO,EAAE;IACb;EACJ,CAAC;EAED,MAAMM,cAAc,GAAG,MAAOC,OAAO,IAAK;IACtC,IAAI;MACA,MAAMV,QAAQ,GAAG,MAAMV,YAAY,CAACW,GAAG,CAACS,OAAO,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAC,CAAC;MAC1E,OAAOX,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,OAAO,IAAI;IACf;EACJ,CAAC;EAED,MAAMS,YAAY,GAAG,MAAOF,OAAO,IAAK;IACpC,IAAI;MACA,MAAMV,QAAQ,GAAG,MAAMV,YAAY,CAACW,GAAG,CAACS,OAAO,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAC,CAAC;MAC1E,OAAOX,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,OAAO,IAAI;IACf;EACJ,CAAC;EAED,MAAMU,MAAM,GAAG,MAAOH,OAAO,IAAK;IAC9B,IAAI;MACF,MAAMI,OAAO,GAAG,MAAMF,YAAY,CAACF,OAAO,CAAC;MAC3C,IAAII,OAAO,EAAE;QACX,MAAMC,YAAY,GAAGC,GAAG,CAACC,eAAe,CAACH,OAAO,CAAC;QACjD,oBACE/B,OAAA;UAAKmC,KAAK,EAAE;YAAEC,MAAM,EAAE,OAAO;YAAEC,SAAS,EAAE;UAAO,CAAE;UAAAC,QAAA,eACjDtC,OAAA,CAACP,QAAQ;YAAC8C,IAAI,EAAEP,YAAa;YAACQ,aAAa,EAAEC,IAAA;cAAA,IAAC;gBAAE/B;cAAS,CAAC,GAAA+B,IAAA;cAAA,OAAK9B,WAAW,CAACD,QAAQ,CAAC;YAAA,CAAC;YAAA4B,QAAA,EAClFI,KAAK,CAACC,IAAI,CAAC,IAAID,KAAK,CAAChC,QAAQ,CAAC,EAAE,CAACkC,CAAC,EAAEC,KAAK,kBACxC7C,OAAA,CAACN,IAAI;cAA2BoD,UAAU,EAAED,KAAK,GAAG,CAAE;cAACE,KAAK,EAAEC,MAAM,CAACC;YAAW,GAApE,QAAOJ,KAAK,GAAG,CAAE,EAAC;cAAAtB,QAAA,EAAA2B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAoD,CACnF;UAAC;YAAA7B,QAAA,EAAA2B,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM;QAAC;UAAA7B,QAAA,EAAA2B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAEV,CAAC,MAAM;QACL,oBAAOpD,OAAA,CAACR,UAAU;UAAA8C,QAAA,EAAC;QAAiB;UAAAf,QAAA,EAAA2B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MACnD;IACF,CAAC,CAAC,OAAOhC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,oBAAOpB,OAAA,CAACR,UAAU;QAAA8C,QAAA,EAAC;MAAiB;QAAAf,QAAA,EAAA2B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IACnD;EACF,CAAC;EAGH,MAAMC,YAAY,GAAIC,IAAI,IAAK;IAC3B,MAAMC,QAAQ,GAAGD,IAAI,CAACE,KAAK,CAAC,OAAO,CAAC,CAACC,GAAG,CAAC,CAAC;IAC1C,MAAMC,GAAG,GAAGH,QAAQ,CAACI,WAAW,CAAC,GAAG,CAAC;IACrC,IAAIJ,QAAQ,KAAK,EAAE,IAAIG,GAAG,GAAG,CAAC,EAAE;MAC5B,OAAO,EAAE;IACb;IACA,OAAOH,QAAQ,CAACK,KAAK,CAACF,GAAG,GAAG,CAAC,CAAC;EAClC,CAAC;EAEDnE,SAAS,CAAC,MAAM;IACZ,MAAMyB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,YAAY,CAACW,GAAG,CAAE,gCAA+BZ,EAAG,EAAC,CAAC;QAC7EG,YAAY,CAACQ,QAAQ,CAACE,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDX,YAAY,CAAC,EAAE,CAAC;MACpB;IACJ,CAAC;IAEDO,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACV,EAAE,EAAEC,YAAY,CAAC,CAAC;EAGtB,MAAMsD,UAAU,GAAIC,IAAI,IAAK;IACzB,MAAMC,SAAS,GAAGV,YAAY,CAACS,IAAI,CAACE,QAAQ,CAAC;IAC7C,MAAMrC,OAAO,GAAI,+BAA8BmC,IAAI,CAACvC,QAAS,SAAQuC,IAAI,CAACG,IAAI,CAACzC,MAAO,EAAC;IAEvF,QAAQuC,SAAS;MACb,KAAK,KAAK;QACN,MAAMG,OAAO,GAAG,MAAAA,CAAA,KAAY;UACxB,IAAI;YACA,MAAMC,WAAW,GAAG,MAAM7C,cAAc,CAACwC,IAAI,CAACvC,QAAQ,EAAEuC,IAAI,CAACG,IAAI,CAACzC,MAAM,CAAC;YACzE,OAAQ,GAAE2C,WAAY,EAAC;UAC3B,CAAC,CAAC,OAAO/C,KAAK,EAAE;YACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;YAClD,OAAO,yBAAyB;UACpC;QACJ,CAAC;QAED,IAAI,CAACR,cAAc,EAAE;UACjBC,iBAAiB,CAAC,IAAI,CAAC;UACvB,CAAC,YAAY;YACT,MAAMuD,OAAO,GAAG,MAAMF,OAAO,CAAC,CAAC;YAC/BnD,cAAc,eAACf,OAAA;cAAAsC,QAAA,EAAM8B;YAAO;cAAA7C,QAAA,EAAA2B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,CAAC;UACxC,CAAC,EAAE,CAAC;QACR;QACA;MACJ,KAAK,KAAK;MACV,KAAK,MAAM;MACX,KAAK,KAAK;QACN,MAAMiB,QAAQ,GAAG,MAAAA,CAAA,KAAY;UACzB,IAAI;YACA,MAAMC,SAAS,GAAG,MAAM5C,cAAc,CAACC,OAAO,CAAC;YAC/C,IAAI2C,SAAS,EAAE;cACX,MAAMC,SAAS,GAAGtC,GAAG,CAACC,eAAe,CAACoC,SAAS,CAAC;cAChDjD,OAAO,CAACmD,GAAG,CAACD,SAAS,CAAC;cACtB,oBAAOvE,OAAA;gBAAKyE,GAAG,EAAEF,SAAU;gBAACG,GAAG,EAAEZ,IAAI,CAACvC;cAAS;gBAAAA,QAAA,EAAA2B,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAEtD,CAAC,MAAM;cACH,oBAAOpD,OAAA,CAACR,UAAU;gBAAA8C,QAAA,EAAC;cAAmB;gBAAAf,QAAA,EAAA2B,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC;YACvD;UACJ,CAAC,CAAC,OAAOhC,KAAK,EAAE;YACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;YAC9C,oBAAOpB,OAAA,CAACR,UAAU;cAAA8C,QAAA,EAAC;YAAmB;cAAAf,QAAA,EAAA2B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;UACvD;QACJ,CAAC;QACD,IAAI,CAACxC,cAAc,EAAE;UACjBC,iBAAiB,CAAC,IAAI,CAAC;UACvB,CAAC,YAAY;YACT,MAAMuD,OAAO,GAAG,MAAMC,QAAQ,CAAC,CAAC;YAChCtD,cAAc,CAACqD,OAAO,CAAC;UAC3B,CAAC,EAAE,CAAC;QACR;QACA;MACJ,KAAK,KAAK;QACN,MAAMO,QAAQ,GAAG,MAAAA,CAAA,KAAY;UACzB,IAAI;YACA,MAAML,SAAS,GAAG,MAAM5C,cAAc,CAACC,OAAO,CAAC;YAC/C,IAAI2C,SAAS,EAAE;cACX,MAAMC,SAAS,GAAGtC,GAAG,CAACC,eAAe,CAACoC,SAAS,CAAC;cAChD,oBAAOtE,OAAA;gBAAKyE,GAAG,EAAEF,SAAU;gBAACG,GAAG,EAAEZ,IAAI,CAACvC;cAAS;gBAAAA,QAAA,EAAA2B,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YACtD,CAAC,MAAM;cACH,oBAAOpD,OAAA,CAACR,UAAU;gBAAA8C,QAAA,EAAC;cAAmB;gBAAAf,QAAA,EAAA2B,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC;YACvD;UACJ,CAAC,CAAC,OAAOhC,KAAK,EAAE;YACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;YAC9C,oBAAOpB,OAAA,CAACR,UAAU;cAAA8C,QAAA,EAAC;YAAmB;cAAAf,QAAA,EAAA2B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;UACvD;QACJ,CAAC;QACD,IAAI,CAACxC,cAAc,EAAE;UACjBC,iBAAiB,CAAC,IAAI,CAAC;UACvB,CAAC,YAAY;YACT,MAAMuD,OAAO,GAAG,MAAMO,QAAQ,CAAC,CAAC;YAChC5D,cAAc,CAACqD,OAAO,CAAC;UAC3B,CAAC,EAAE,CAAC;QACR;QACA;MACJ,KAAK,KAAK;MACV,KAAK,KAAK;QACN,MAAMQ,QAAQ,GAAG,MAAAA,CAAA,KAAY;UACzB,IAAI;YACA,MAAMN,SAAS,GAAG,MAAM5C,cAAc,CAACC,OAAO,CAAC;YAC/C,IAAI2C,SAAS,EAAE;cACX,MAAMC,SAAS,GAAGtC,GAAG,CAACC,eAAe,CAACoC,SAAS,CAAC;cAChD,oBAAOtE,OAAA;gBAAOyE,GAAG,EAAEF,SAAU;gBAACM,QAAQ;gBAAAvC,QAAA,EAAC;cAEvC;gBAAAf,QAAA,EAAA2B,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YACZ,CAAC,MAAM;cACH,oBAAOpD,OAAA,CAACR,UAAU;gBAAA8C,QAAA,EAAC;cAAmB;gBAAAf,QAAA,EAAA2B,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC;YACvD;UACJ,CAAC,CAAC,OAAOhC,KAAK,EAAE;YACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;YAC9C,oBAAOpB,OAAA,CAACR,UAAU;cAAA8C,QAAA,EAAC;YAAmB;cAAAf,QAAA,EAAA2B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;UACvD;QACJ,CAAC;QACD,IAAI,CAACxC,cAAc,EAAE;UACjBC,iBAAiB,CAAC,IAAI,CAAC;UACvB,CAAC,YAAY;YACT,MAAMuD,OAAO,GAAG,MAAMQ,QAAQ,CAAC,CAAC;YAChC7D,cAAc,CAACqD,OAAO,CAAC;UAC3B,CAAC,EAAE,CAAC;QACR;QACA;MACJ,KAAK,KAAK;QACN,IAAI,CAACxD,cAAc,EAAE;UACjBC,iBAAiB,CAAC,IAAI,CAAC;UACvB,CAAC,YAAY;YACT,MAAMkB,OAAO,GAAG,MAAMF,YAAY,CAACF,OAAO,CAAC;YAC3C,IAAII,OAAO,EAAE;cACT,MAAMC,YAAY,GAAGC,GAAG,CAACC,eAAe,CAACH,OAAO,CAAC;cACjDhB,cAAc,CAAC,MAAMe,MAAM,CAACE,YAAY,CAAC,CAAC;YAC9C,CAAC,MAAM;cACHjB,cAAc,eAACf,OAAA,CAACR,UAAU;gBAAA8C,QAAA,EAAC;cAAiB;gBAAAf,QAAA,EAAA2B,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,CAAC;YAC9D;UACJ,CAAC,EAAE,CAAC;QACR;QACA;MACJ,KAAK,MAAM;QACP,aAAApD,OAAA;UAAQyE,GAAG,EAAG,sDAAqD9C,OAAQ,EAAE;UAACoB,KAAK,EAAC,MAAM;UAACX,MAAM,EAAC,OAAO;UAAC0C,WAAW,EAAC;QAAG;UAAAvD,QAAA,EAAA2B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAC5H;MACJ,KAAK,MAAM;QACP,aAAApD,OAAA;UAAQyE,GAAG,EAAG,sDAAqD9C,OAAQ,EAAE;UAACoB,KAAK,EAAC,MAAM;UAACX,MAAM,EAAC,OAAO;UAAC0C,WAAW,EAAC;QAAG;UAAAvD,QAAA,EAAA2B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAC5H;MACJ;QACI,oBAAOpD,OAAA,CAACR,UAAU;UAAA8C,QAAA,EAAC;QAAuB;UAAAf,QAAA,EAAA2B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;IAC/D;EACJ,CAAC;EAED,oBACIpD,OAAA;IAAAsC,QAAA,gBACItC,OAAA,CAACF,MAAM;MAAAyB,QAAA,EAAA2B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVpD,OAAA;MAAKmC,KAAK,EAAE;QAAE4C,UAAU,EAAE;MAAO,CAAE;MAAAzC,QAAA,EAC9B9B,SAAS,CAACwE,GAAG,CAAElB,IAAI,iBAChB9D,OAAA;QAAAsC,QAAA,GACKuB,UAAU,CAACC,IAAI,CAAC,EAChBhD,WAAW;MAAA,GAFNgD,IAAI,CAACxD,EAAE;QAAAiB,QAAA,EAAA2B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACR;IAAC;MAAA7B,QAAA,EAAA2B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAA7B,QAAA,EAAA2B,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC/C,EAAA,CAtPID,IAAI;EAAA,QACSP,SAAS,EACHD,eAAe;AAAA;AAAAqF,EAAA,GAFlC7E,IAAI;AAwPV,eAAeA,IAAI;AAAC,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}