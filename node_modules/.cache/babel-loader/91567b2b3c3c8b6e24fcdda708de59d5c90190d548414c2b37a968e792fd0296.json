{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\OneDrive - nucleusonline\\\\Documents\\\\Kbase\\\\kbase-frontend\\\\src\\\\View.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport { useParams } from 'react-router-dom';\nimport { Typography } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { Link } from 'react-router-dom';\nimport FileViewer from 'react-file-viewer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst View = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [searchRes, setSearchRes] = useState([]);\n  const [fileContents, setFileContents] = useState({});\n  const getFileContent = async fileName => {\n    try {\n      const response = await fetch(`http://localhost:8080/files/${fileName}.txt`);\n      if (response.ok) {\n        return await response.text();\n      } else {\n        console.error('Error retrieving file content:', response.status);\n        return '';\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      return '';\n    }\n  };\n  const getExtension = path => {\n    const baseName = path.split(/[\\\\/]/).pop();\n    const pos = baseName.lastIndexOf('.');\n    if (baseName === '' || pos < 1) {\n      return '';\n    }\n    return baseName.slice(pos + 1);\n  };\n  useEffect(() => {\n    fetch(`http://localhost:8080/search/${id}`).then(response => response.json()).then(data => {\n      setSearchRes(data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n    const fetchFileContents = async () => {\n      const fileContentPromises = searchRes.map(item => getFileContent(item.fileName));\n      const fileContentsArray = await Promise.all(fileContentPromises);\n      const fileContentsMap = searchRes.reduce((acc, item, index) => ({\n        ...acc,\n        [item.fileName]: fileContentsArray[index]\n      }), {});\n      setFileContents(fileContentsMap);\n    };\n    fetchFileContents();\n  }, [searchRes, id]);\n  const renderFile = item => {\n    const extension = getExtension(item.filePath);\n    const fileUrl = `http://localhost:8080/files/${item.fileName}.${extension}`;\n    const fileTypes = {\n      txt: 'text/plain',\n      jpg: 'image/jpeg',\n      jpeg: 'image/jpeg',\n      png: 'image/png',\n      mp4: 'video/mp4',\n      mp3: 'audio/mpeg',\n      pdf: 'application/pdf',\n      docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n      xlsx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    };\n    if (extension in fileTypes) {\n      return /*#__PURE__*/_jsxDEV(FileViewer, {\n        fileType: fileTypes[extension],\n        filePath: fileUrl,\n        errorComponent: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Unsupported file format\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Unsupported file format\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: searchRes.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderFile(item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(View, \"yANDVc04B5DAmk0q1RYv8IVb2Rk=\", false, function () {\n  return [useParams];\n});\n_c = View;\nexport default View;\nvar _c;\n$RefreshReg$(_c, \"View\");","map":{"version":3,"names":["React","useState","useEffect","Paper","useParams","Typography","styled","Link","FileViewer","jsxDEV","_jsxDEV","View","_s","id","searchRes","setSearchRes","fileContents","setFileContents","getFileContent","fileName","response","fetch","ok","text","console","error","status","getExtension","path","baseName","split","pop","pos","lastIndexOf","slice","then","json","data","catch","fetchFileContents","fileContentPromises","map","item","fileContentsArray","Promise","all","fileContentsMap","reduce","acc","index","renderFile","extension","filePath","fileUrl","fileTypes","txt","jpg","jpeg","png","mp4","mp3","pdf","docx","xlsx","fileType","errorComponent","children","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/OneDrive/OneDrive - nucleusonline/Documents/Kbase/kbase-frontend/src/View.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Typography } from '@mui/material';\r\nimport { styled } from '@mui/system';\r\nimport { Link } from 'react-router-dom';\r\nimport FileViewer from 'react-file-viewer';\r\n\r\nconst View = () => {\r\n  const { id } = useParams();\r\n\r\n  const [searchRes, setSearchRes] = useState([]);\r\n  const [fileContents, setFileContents] = useState({});\r\n\r\n  const getFileContent = async (fileName) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/files/${fileName}.txt`);\r\n      if (response.ok) {\r\n        return await response.text();\r\n      } else {\r\n        console.error('Error retrieving file content:', response.status);\r\n        return '';\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      return '';\r\n    }\r\n  };\r\n\r\n  const getExtension = (path) => {\r\n    const baseName = path.split(/[\\\\/]/).pop();\r\n    const pos = baseName.lastIndexOf('.');\r\n    if (baseName === '' || pos < 1) {\r\n      return '';\r\n    }\r\n    return baseName.slice(pos + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:8080/search/${id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setSearchRes(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n\r\n    const fetchFileContents = async () => {\r\n      const fileContentPromises = searchRes.map((item) =>\r\n        getFileContent(item.fileName)\r\n      );\r\n\r\n      const fileContentsArray = await Promise.all(fileContentPromises);\r\n\r\n      const fileContentsMap = searchRes.reduce(\r\n        (acc, item, index) => ({\r\n          ...acc,\r\n          [item.fileName]: fileContentsArray[index],\r\n        }),\r\n        {}\r\n      );\r\n\r\n      setFileContents(fileContentsMap);\r\n    };\r\n\r\n    fetchFileContents();\r\n  }, [searchRes, id]);\r\n\r\n  const renderFile = (item) => {\r\n    const extension = getExtension(item.filePath);\r\n    const fileUrl = `http://localhost:8080/files/${item.fileName}.${extension}`;\r\n\r\n    const fileTypes = {\r\n      txt: 'text/plain',\r\n      jpg: 'image/jpeg',\r\n      jpeg: 'image/jpeg',\r\n      png: 'image/png',\r\n      mp4: 'video/mp4',\r\n      mp3: 'audio/mpeg',\r\n      pdf: 'application/pdf',\r\n      docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n      xlsx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n    };\r\n\r\n    if (extension in fileTypes) {\r\n      return (\r\n        <FileViewer\r\n          fileType={fileTypes[extension]}\r\n          filePath={fileUrl}\r\n          errorComponent={<Typography>Unsupported file format</Typography>}\r\n        />\r\n      );\r\n    }\r\n\r\n    return <Typography>Unsupported file format</Typography>;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {searchRes.map((item) => (\r\n        <div key={item.id}>\r\n          {renderFile(item)}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default View;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}