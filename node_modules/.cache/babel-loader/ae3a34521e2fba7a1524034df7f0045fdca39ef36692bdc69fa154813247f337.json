{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\OneDrive - nucleusonline\\\\Documents\\\\Kbase\\\\kbase-frontend\\\\src\\\\View.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport { useParams } from 'react-router-dom';\nimport { Typography } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst View = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [searchRes, setSearchRes] = useState([]);\n  const [fileContents, setFileContents] = useState({});\n  const getFileContent = async fileName => {\n    try {\n      const response = await fetch(`http://localhost:8080/files/${fileName}.txt`);\n      if (response.ok) {\n        return await response.text();\n      } else {\n        console.error('Error retrieving file content:', response.status);\n        return '';\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      return '';\n    }\n  };\n  const getExtension = path => {\n    const baseName = path.split(/[\\\\/]/).pop();\n    const pos = baseName.lastIndexOf('.');\n    if (baseName === '' || pos < 1) {\n      return '';\n    }\n    return baseName.slice(pos + 1);\n  };\n  useEffect(() => {\n    fetch(`http://localhost:8080/search/${id}`).then(response => response.json()).then(data => {\n      setSearchRes(data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n    const fetchFileContents = async () => {\n      const fileContentPromises = searchRes.map(item => getFileContent(item.fileName));\n      const fileContentsArray = await Promise.all(fileContentPromises);\n      const fileContentsMap = searchRes.reduce((acc, item, index) => ({\n        ...acc,\n        [item.fileName]: fileContentsArray[index]\n      }), {});\n      setFileContents(fileContentsMap);\n    };\n    fetchFileContents();\n  }, [searchRes, id]);\n  const renderFile = item => {\n    const extension = getExtension(item.filePath);\n    const fileUrl = `http://localhost:8080/files/${item.fileName}.${extension}`;\n    switch (extension) {\n      case 'txt':\n        return /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: fileContents[item.fileName]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 16\n        }, this);\n      case 'jpg':\n      case 'jpeg':\n      case 'png':\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: fileUrl,\n          alt: item.fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 16\n        }, this);\n      case 'mp4':\n        return /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: fileUrl,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this);\n      case 'mp3':\n        return /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: fileUrl,\n            type: \"audio/mpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Unsupported file format\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: searchRes.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: '1fr 1fr 1fr 1fr'\n        },\n        children: [\"File Details :\", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.makeDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.updateDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), renderFile(item)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(View, \"yANDVc04B5DAmk0q1RYv8IVb2Rk=\", false, function () {\n  return [useParams];\n});\n_c = View;\nexport default View;\nvar _c;\n$RefreshReg$(_c, \"View\");","map":{"version":3,"names":["React","useState","useEffect","Paper","useParams","Typography","styled","Link","jsxDEV","_jsxDEV","View","_s","id","searchRes","setSearchRes","fileContents","setFileContents","getFileContent","fileName","response","fetch","ok","text","console","error","status","getExtension","path","baseName","split","pop","pos","lastIndexOf","slice","then","json","data","catch","fetchFileContents","fileContentPromises","map","item","fileContentsArray","Promise","all","fileContentsMap","reduce","acc","index","renderFile","extension","filePath","fileUrl","children","_jsxFileName","lineNumber","columnNumber","src","alt","controls","type","style","display","gridTemplateColumns","makeDate","updateDate","_c","$RefreshReg$"],"sources":["D:/OneDrive/OneDrive - nucleusonline/Documents/Kbase/kbase-frontend/src/View.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Typography } from '@mui/material';\r\nimport { styled } from '@mui/system';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst View = () => {\r\n  const { id } = useParams();\r\n\r\n  const [searchRes, setSearchRes] = useState([]);\r\n  const [fileContents, setFileContents] = useState({});\r\n\r\n  const getFileContent = async (fileName) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/files/${fileName}.txt`);\r\n      if (response.ok) {\r\n        return await response.text();\r\n      } else {\r\n        console.error('Error retrieving file content:', response.status);\r\n        return '';\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      return '';\r\n    }\r\n  };\r\n\r\n  const getExtension = (path) => {\r\n    const baseName = path.split(/[\\\\/]/).pop();\r\n    const pos = baseName.lastIndexOf('.');\r\n    if (baseName === '' || pos < 1) {\r\n      return '';\r\n    }\r\n    return baseName.slice(pos + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:8080/search/${id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setSearchRes(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n\r\n    const fetchFileContents = async () => {\r\n      const fileContentPromises = searchRes.map((item) =>\r\n        getFileContent(item.fileName)\r\n      );\r\n\r\n      const fileContentsArray = await Promise.all(fileContentPromises);\r\n\r\n      const fileContentsMap = searchRes.reduce(\r\n        (acc, item, index) => ({\r\n          ...acc,\r\n          [item.fileName]: fileContentsArray[index],\r\n        }),\r\n        {}\r\n      );\r\n\r\n      setFileContents(fileContentsMap);\r\n    };\r\n\r\n    fetchFileContents();\r\n  }, [searchRes, id]);\r\n\r\n  const renderFile = (item) => {\r\n    const extension = getExtension(item.filePath);\r\n    const fileUrl = `http://localhost:8080/files/${item.fileName}.${extension}`;\r\n\r\n    switch (extension) {\r\n      case 'txt':\r\n        return <pre>{fileContents[item.fileName]}</pre>;\r\n      case 'jpg':\r\n      case 'jpeg':\r\n      case 'png':\r\n        return <img src={fileUrl} alt={item.fileName} />;\r\n      case 'mp4':\r\n        return (\r\n          <video controls>\r\n            <source src={fileUrl} type=\"video/mp4\" />\r\n          </video>\r\n        );\r\n      case 'mp3':\r\n        return (\r\n          <audio controls>\r\n            <source src={fileUrl} type=\"audio/mpeg\" />\r\n          </audio>\r\n        );\r\n      default:\r\n        return <Typography>Unsupported file format</Typography>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {searchRes.map((item) => (\r\n        <div key={item.id}>\r\n            <div style={{display : 'grid', gridTemplateColumns : '1fr 1fr 1fr 1fr'}}>\r\n                File Details :\r\n                <div>\r\n                    {item.makeDate}\r\n                </div>\r\n                <div>\r\n                    {item.updateDate}\r\n                </div>\r\n                <div>\r\n                    {item.fileName}\r\n                </div>\r\n            </div>\r\n          {renderFile(item)}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default View;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}